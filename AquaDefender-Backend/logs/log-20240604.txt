2024-06-04 13:51:13.740 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 13:51:13.944 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 13:51:14.134 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 13:51:14.135 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 13:51:14.138 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 13:51:14.139 +03:00 [INF] Hosting environment: Development
2024-06-04 13:51:14.141 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 13:51:17.774 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 13:51:18.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 329.5124ms
2024-06-04 13:51:18.128 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 13:51:18.128 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 13:51:18.145 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 17.4106ms
2024-06-04 13:51:18.208 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 79.875ms
2024-06-04 13:51:18.283 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 13:51:18.452 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 169.3798ms
2024-06-04 13:51:28.980 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 13:51:29.073 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 13:51:29.090 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 13:51:45.108 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 13:51:45.129 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 13:51:45.221 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 13:51:45.287 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 13:51:45.348 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 13:51:45.361 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 13:51:45.367 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16270.7465ms
2024-06-04 13:51:45.368 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 13:51:45.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16397.4145ms
2024-06-04 13:55:43.108 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 13:55:43.251 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 13:55:43.657 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 13:55:43.658 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 13:55:43.660 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 13:55:43.661 +03:00 [INF] Hosting environment: Development
2024-06-04 13:55:43.662 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 13:55:44.721 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 13:55:45.007 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 294.0559ms
2024-06-04 13:55:45.012 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 13:55:45.020 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 7.802ms
2024-06-04 13:55:45.033 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 13:55:45.081 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.9893ms
2024-06-04 13:55:45.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 13:55:45.370 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 176.6641ms
2024-06-04 13:56:05.080 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 13:56:05.178 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 13:56:05.204 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 13:56:21.216 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 13:56:21.243 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 13:56:21.342 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 13:56:21.420 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 13:56:21.494 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 13:56:21.511 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 13:56:21.518 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16307.1247ms
2024-06-04 13:56:21.520 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 13:56:21.530 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16450.6854ms
2024-06-04 13:56:40.571 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 13:56:40.587 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 13:56:40.595 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 13:56:55.469 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 13:56:55.473 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 13:56:55.510 +03:00 [ERR] An error occurred while getting the city with ID 1.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetCityByIdAsync(Int32 cityId) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 28
2024-06-04 13:56:55.566 +03:00 [ERR] An error occurred while getting the city with ID 1.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetCityByIdAsync(Int32 cityId) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 28
   at AquaDefender_Backend.Service.LocationService.GetCityByIdAsync(Int32 cityId) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 31
2024-06-04 13:56:55.629 +03:00 [ERR] An error occurred while getting the city with ID 1.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetCityByIdAsync(Int32 cityId) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 28
   at AquaDefender_Backend.Service.LocationService.GetCityByIdAsync(Int32 cityId) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 31
   at AquaDefender_Backend.Controllers.LocationsController.GetCityById(Int32 id) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 74
2024-06-04 13:56:55.637 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 13:56:55.639 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 15041.5798ms
2024-06-04 13:56:55.640 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 13:56:55.641 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 500 null text/plain; charset=utf-8 15069.4334ms
2024-06-04 13:58:48.925 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 13:58:49.058 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 13:58:49.186 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 13:58:49.187 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 13:58:49.189 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 13:58:49.190 +03:00 [INF] Hosting environment: Development
2024-06-04 13:58:49.190 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 13:58:50.117 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 13:58:50.370 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 258.5825ms
2024-06-04 13:58:50.398 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 13:58:50.398 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 13:58:50.404 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 6.4396ms
2024-06-04 13:58:50.439 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.7085ms
2024-06-04 13:58:50.491 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 13:58:50.699 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 208.4576ms
2024-06-04 13:59:23.387 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 13:59:24.098 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 13:59:24.119 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 13:59:39.953 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 13:59:39.969 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 13:59:40.031 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 13:59:40.095 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 13:59:40.159 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 13:59:40.170 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 13:59:40.175 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16050.3928ms
2024-06-04 13:59:40.176 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 13:59:40.184 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16799.005ms
2024-06-04 14:00:24.284 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:00:24.378 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:00:24.470 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:00:24.472 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:00:24.473 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:00:24.474 +03:00 [INF] Hosting environment: Development
2024-06-04 14:00:24.475 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:00:24.926 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:00:25.111 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 189.9332ms
2024-06-04 14:00:25.124 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:00:25.134 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:00:25.134 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 10.4864ms
2024-06-04 14:00:25.170 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.9179ms
2024-06-04 14:00:25.233 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:00:25.375 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 141.774ms
2024-06-04 14:01:16.984 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:01:17.045 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:01:17.062 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:01:20.198 +03:00 [INF] Executed DbCommand (141ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 14:01:20.277 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 14:01:20.291 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 3224.9356ms
2024-06-04 14:01:20.293 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:01:20.301 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 3317.7046ms
2024-06-04 14:04:32.533 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:04:32.633 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:04:32.741 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:04:32.742 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:04:32.744 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:04:32.745 +03:00 [INF] Hosting environment: Development
2024-06-04 14:04:32.746 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:04:33.396 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:04:33.613 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 219.1549ms
2024-06-04 14:04:33.621 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:04:33.626 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 5.4813ms
2024-06-04 14:04:33.629 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:04:33.662 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 32.5635ms
2024-06-04 14:04:33.733 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:04:33.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 135.788ms
2024-06-04 14:04:41.121 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:04:41.185 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:04:41.200 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:04:56.971 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 14:04:56.989 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 14:04:57.044 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 14:04:57.111 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 14:04:57.173 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 14:04:57.185 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 14:04:57.190 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 15985.5451ms
2024-06-04 14:04:57.192 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:04:57.200 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16079.889ms
2024-06-04 14:11:39.806 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:11:39.990 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:11:40.165 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:11:40.166 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:11:40.168 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:11:40.169 +03:00 [INF] Hosting environment: Development
2024-06-04 14:11:40.170 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:11:40.869 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:11:41.116 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 253.4074ms
2024-06-04 14:11:41.123 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:11:41.131 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 8.1488ms
2024-06-04 14:11:41.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:11:41.172 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.7657ms
2024-06-04 14:11:41.254 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:11:41.401 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 147.2228ms
2024-06-04 14:11:45.567 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:11:45.632 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:11:45.652 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:12:01.589 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 14:12:01.612 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 14:12:01.672 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 14:12:01.737 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 14:12:01.797 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 14:12:01.810 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 14:12:01.815 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16158.8081ms
2024-06-04 14:12:01.816 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:12:01.826 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16259.217ms
2024-06-04 14:12:56.768 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:12:56.867 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:12:56.966 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:12:56.967 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:12:56.970 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:12:56.971 +03:00 [INF] Hosting environment: Development
2024-06-04 14:12:56.972 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:12:57.276 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:12:57.496 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 227.3289ms
2024-06-04 14:12:57.501 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:12:57.507 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 5.8547ms
2024-06-04 14:12:57.512 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:12:57.541 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 28.932ms
2024-06-04 14:12:57.613 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:12:57.749 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 136.9489ms
2024-06-04 14:13:20.992 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:13:21.052 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:13:21.067 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:13:36.913 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 14:13:36.938 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 14:13:36.997 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 14:13:37.061 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 14:13:37.120 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 14:13:37.133 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 14:13:37.139 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16065.9637ms
2024-06-04 14:13:37.141 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:13:37.150 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16158.6842ms
2024-06-04 14:23:20.884 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:23:21.033 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:23:21.206 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:23:21.208 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:23:21.210 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:23:21.210 +03:00 [INF] Hosting environment: Development
2024-06-04 14:23:21.211 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:23:22.158 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:23:22.477 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 327.7138ms
2024-06-04 14:23:22.485 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:23:22.494 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 9.5917ms
2024-06-04 14:23:22.499 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:23:22.541 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.5376ms
2024-06-04 14:23:22.663 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:23:22.858 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 195.8925ms
2024-06-04 14:23:32.231 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:23:32.982 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:23:33.009 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:23:49.492 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 14:23:49.513 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 14:23:49.573 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 14:23:49.642 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 14:23:49.705 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 14:23:49.718 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 14:23:49.723 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16709.1694ms
2024-06-04 14:23:49.724 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:23:49.734 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 17503.0436ms
2024-06-04 14:29:04.339 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:29:04.438 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:29:04.556 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:29:04.558 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:29:04.560 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:29:04.561 +03:00 [INF] Hosting environment: Development
2024-06-04 14:29:04.562 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:29:05.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:29:05.399 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 264.6ms
2024-06-04 14:29:05.429 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:29:05.429 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:29:05.441 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 12.9534ms
2024-06-04 14:29:05.466 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.9692ms
2024-06-04 14:29:05.540 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:29:05.691 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 152.1119ms
2024-06-04 14:29:43.635 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:29:43.704 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:29:43.720 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:29:59.369 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 14:29:59.385 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 14:29:59.436 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 14:29:59.497 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 14:29:59.556 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 14:29:59.568 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 14:29:59.573 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 15848.3126ms
2024-06-04 14:29:59.574 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:29:59.582 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 15946.6673ms
2024-06-04 14:33:13.262 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:33:13.362 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:33:13.465 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:33:13.466 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:33:13.468 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:33:13.469 +03:00 [INF] Hosting environment: Development
2024-06-04 14:33:13.470 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:33:14.320 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:33:14.567 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 255.1052ms
2024-06-04 14:33:14.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:33:14.582 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 7.9117ms
2024-06-04 14:33:14.590 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:33:14.638 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 48.8885ms
2024-06-04 14:33:14.721 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:33:14.890 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 169.1903ms
2024-06-04 14:33:38.499 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:33:38.570 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:33:38.590 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:33:54.505 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 14:33:54.527 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 14:33:54.588 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 14:33:54.652 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 14:33:54.714 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 14:33:54.725 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 14:33:54.731 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16135.802ms
2024-06-04 14:33:54.733 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:33:54.741 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16242.2474ms
2024-06-04 14:47:23.965 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:47:24.062 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:47:24.185 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:47:24.186 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:47:24.189 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:47:24.190 +03:00 [INF] Hosting environment: Development
2024-06-04 14:47:24.191 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:47:24.840 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:47:25.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 261.6517ms
2024-06-04 14:47:25.120 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:47:25.120 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:47:25.127 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 7.1008ms
2024-06-04 14:47:25.155 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 35.691ms
2024-06-04 14:47:25.212 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:47:25.354 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 143.0987ms
2024-06-04 14:49:47.681 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:49:47.743 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:49:47.764 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:50:03.655 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 14:50:03.677 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 14:50:03.740 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 14:50:03.814 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 14:50:03.885 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 14:50:03.898 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 14:50:03.902 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16132.7608ms
2024-06-04 14:50:03.905 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:50:03.913 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16232.9728ms
2024-06-04 14:57:29.248 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 14:57:29.389 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 14:57:29.528 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 14:57:29.529 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 14:57:29.531 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 14:57:29.534 +03:00 [INF] Hosting environment: Development
2024-06-04 14:57:29.535 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 14:57:30.052 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 14:57:30.261 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 218.0369ms
2024-06-04 14:57:30.282 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 14:57:30.285 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 14:57:30.417 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 135.6562ms
2024-06-04 14:57:30.462 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 177.7977ms
2024-06-04 14:57:30.520 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 14:57:30.715 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 195.3249ms
2024-06-04 14:57:34.069 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 14:57:34.138 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:57:34.159 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 14:57:50.143 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 14:57:50.167 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 14:57:50.235 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 14:57:50.311 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 14:57:50.379 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 14:57:50.393 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 14:57:50.398 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16233.6717ms
2024-06-04 14:57:50.400 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 14:57:50.409 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16340.5586ms
2024-06-04 16:01:09.630 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 16:01:09.783 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 16:01:09.933 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 16:01:09.934 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 16:01:09.936 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 16:01:09.937 +03:00 [INF] Hosting environment: Development
2024-06-04 16:01:09.937 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 16:01:10.992 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 16:01:11.259 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 270.9239ms
2024-06-04 16:01:11.274 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 16:01:11.286 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 16:01:11.288 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 14.7235ms
2024-06-04 16:01:11.351 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 64.5116ms
2024-06-04 16:01:11.427 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 16:01:11.568 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 140.4819ms
2024-06-04 16:01:23.075 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 16:01:23.184 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:01:23.202 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:01:26.500 +03:00 [INF] Executed DbCommand (138ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 16:01:26.576 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:01:26.590 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 3384.6942ms
2024-06-04 16:01:26.592 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:01:26.599 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 3524.7094ms
2024-06-04 16:02:24.524 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 16:02:24.708 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 16:02:24.834 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 16:02:24.836 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 16:02:24.838 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 16:02:24.839 +03:00 [INF] Hosting environment: Development
2024-06-04 16:02:24.840 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 16:02:25.679 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 16:02:25.990 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 320.479ms
2024-06-04 16:02:25.999 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 16:02:26.009 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 9.7119ms
2024-06-04 16:02:26.015 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 16:02:26.057 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 41.8749ms
2024-06-04 16:02:26.205 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 16:02:26.440 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 235.1432ms
2024-06-04 16:02:38.276 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 16:02:38.340 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:02:38.357 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:02:54.212 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 16:02:54.232 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 16:02:54.294 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 16:02:54.363 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 16:02:54.426 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 16:02:54.436 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 16:02:54.441 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16079.2661ms
2024-06-04 16:02:54.443 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:02:54.451 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16174.5685ms
2024-06-04 16:11:12.287 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 16:11:12.403 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 16:11:12.548 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 16:11:12.549 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 16:11:12.552 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 16:11:12.553 +03:00 [INF] Hosting environment: Development
2024-06-04 16:11:12.554 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 16:11:13.490 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 16:11:13.755 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 269.5074ms
2024-06-04 16:11:13.768 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 16:11:13.776 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 16:11:13.777 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 9.0607ms
2024-06-04 16:11:13.819 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.6904ms
2024-06-04 16:11:13.886 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 16:11:14.033 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 147.3449ms
2024-06-04 16:11:18.290 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 16:11:18.357 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:11:18.376 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:11:34.337 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 16:11:34.357 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 16:11:34.424 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 16:11:34.494 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 16:11:34.556 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 16:11:34.568 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 16:11:34.572 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16191.576ms
2024-06-04 16:11:34.573 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:11:34.580 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16290.7101ms
2024-06-04 16:17:40.158 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 16:17:40.249 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 16:17:40.351 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 16:17:40.353 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 16:17:40.355 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 16:17:40.356 +03:00 [INF] Hosting environment: Development
2024-06-04 16:17:40.356 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 16:17:40.960 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 16:17:41.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 190.3703ms
2024-06-04 16:17:41.159 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 16:17:41.169 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 10.1564ms
2024-06-04 16:17:41.175 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 16:17:41.217 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.1094ms
2024-06-04 16:17:41.286 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 16:17:41.428 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 142.504ms
2024-06-04 16:17:56.596 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 16:17:56.653 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:17:56.668 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:18:12.417 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 16:18:12.431 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 16:18:12.488 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 16:18:12.557 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 16:18:12.623 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 16:18:12.635 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 16:18:12.639 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 15965.7622ms
2024-06-04 16:18:12.640 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:18:12.648 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16052.8023ms
2024-06-04 16:37:00.014 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 16:37:00.217 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 16:37:00.412 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 16:37:00.413 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 16:37:00.416 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 16:37:00.417 +03:00 [INF] Hosting environment: Development
2024-06-04 16:37:00.418 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 16:37:01.284 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 16:37:01.612 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 336.0387ms
2024-06-04 16:37:01.665 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 16:37:01.665 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 16:37:01.733 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 69.5575ms
2024-06-04 16:37:01.839 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 175.427ms
2024-06-04 16:37:01.943 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 16:37:02.357 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 414.6313ms
2024-06-04 16:37:07.385 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 16:37:07.501 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:37:07.532 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:37:24.148 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 16:37:24.256 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 16:37:24.402 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 16:37:24.626 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 16:37:24.807 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 16:37:24.834 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 16:37:24.846 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 17303.5987ms
2024-06-04 16:37:24.849 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:37:24.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 17483.3399ms
2024-06-04 16:37:39.679 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 16:37:39.900 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 16:37:40.052 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 16:37:40.055 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 16:37:40.059 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 16:37:40.060 +03:00 [INF] Hosting environment: Development
2024-06-04 16:37:40.062 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 16:37:40.894 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 16:37:41.209 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 326.9382ms
2024-06-04 16:37:41.216 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 16:37:41.227 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 11.0152ms
2024-06-04 16:37:41.238 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 16:37:41.293 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 54.8961ms
2024-06-04 16:37:41.466 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 16:37:41.998 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 533.0537ms
2024-06-04 16:37:45.347 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 16:37:45.523 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:37:45.554 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:37:56.132 +03:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 16:37:56.326 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:37:56.354 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 10791.1006ms
2024-06-04 16:37:56.357 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:37:56.371 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 11023.7864ms
2024-06-04 16:38:29.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 16:38:29.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 16:38:29.077 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 16:38:29.093 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:29.093 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:29.095 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:29.099 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 16:38:29.099 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 16:38:29.102 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 16:38:29.108 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:29.108 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:29.109 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:29.522 +03:00 [INF] Executed DbCommand (213ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:38:29.648 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:38:29.731 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 619.829ms
2024-06-04 16:38:29.738 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 16:38:29.738 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 16:38:29.751 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:29.758 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 682.1776ms
2024-06-04 16:38:29.762 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 16:38:29.786 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:29.931 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:38:29.936 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:38:29.939 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 141.3422ms
2024-06-04 16:38:29.942 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 16:38:29.944 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 207.5757ms
2024-06-04 16:38:30.311 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:38:30.313 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:38:30.317 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:38:30.322 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:38:30.323 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 1207.082ms
2024-06-04 16:38:30.325 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 16:38:30.327 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 16:38:30.325 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 1212.3887ms
2024-06-04 16:38:30.332 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.334 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 1257.5173ms
2024-06-04 16:38:30.328 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 16:38:30.342 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 16:38:30.344 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 16:38:30.353 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.354 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 1278.2217ms
2024-06-04 16:38:30.356 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:30.357 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 16:38:30.368 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:38:30.368 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/13/hasimages - null null
2024-06-04 16:38:30.376 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:30.382 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.363 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/4 - null null
2024-06-04 16:38:30.387 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.391 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:30.367 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/264 - null null
2024-06-04 16:38:30.381 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:38:30.396 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:38:30.399 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:30.400 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.404 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.408 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:38:30.412 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:38:30.414 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:30.418 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:30.415 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:30.416 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:30.418 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 51.0305ms
2024-06-04 16:38:30.425 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 35.4823ms
2024-06-04 16:38:30.436 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 16:38:30.436 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:30.437 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 16:38:30.438 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:30.439 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 114.3266ms
2024-06-04 16:38:30.443 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 115.7428ms
2024-06-04 16:38:30.453 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:38:30.451 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:38:30.453 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 16:38:30.459 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/41/hasimages - null null
2024-06-04 16:38:30.472 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.474 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.477 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.481 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:30.482 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:30.482 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:30.483 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:30.485 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:30.486 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:30.487 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:30.488 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:30.491 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:30.570 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:30.577 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:30.583 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 152.8978ms
2024-06-04 16:38:30.591 +03:00 [INF] Executed DbCommand (31ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:30.591 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:30.599 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:30.600 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/13/hasimages - 200 null application/json; charset=utf-8 232.2844ms
2024-06-04 16:38:30.602 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 104.7468ms
2024-06-04 16:38:30.608 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:30.610 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/41/hasimages - 200 null application/json; charset=utf-8 151.0509ms
2024-06-04 16:38:30.611 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:30.660 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:30.667 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:30.669 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 241.3637ms
2024-06-04 16:38:30.672 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:30.673 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 306.0211ms
2024-06-04 16:38:30.695 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:30.698 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 252.1146ms
2024-06-04 16:38:30.700 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:30.701 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/264 - 200 null application/json; charset=utf-8 335.476ms
2024-06-04 16:38:31.609 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:31.613 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:31.621 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 1131.1825ms
2024-06-04 16:38:31.623 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:31.625 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 499 null application/json; charset=utf-8 1172.0806ms
2024-06-04 16:38:31.629 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:31.635 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:31.638 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 1143.2279ms
2024-06-04 16:38:31.640 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:31.642 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 499 null application/json; charset=utf-8 1189.084ms
2024-06-04 16:38:31.660 +03:00 [INF] Executed DbCommand (56ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:31.677 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:31.680 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 1187.2838ms
2024-06-04 16:38:31.682 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:31.684 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 499 null application/json; charset=utf-8 1233.6217ms
2024-06-04 16:38:32.654 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:32.678 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:32.712 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 2270.144ms
2024-06-04 16:38:32.719 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:32.726 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/4 - 200 null application/json; charset=utf-8 2362.6184ms
2024-06-04 16:38:32.739 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:38:32.740 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 16:38:32.742 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/41/hasimages - null null
2024-06-04 16:38:32.742 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:38:32.761 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:32.766 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:32.772 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:32.776 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:32.777 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:32.779 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:32.780 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:32.782 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:32.784 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:32.788 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:32.789 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:32.791 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:32.805 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:32.801 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:32.811 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:32.809 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:32.816 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:32.818 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 21.3869ms
2024-06-04 16:38:32.819 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:32.820 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:32.824 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:32.823 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:32.827 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 24.0957ms
2024-06-04 16:38:32.829 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 88.9738ms
2024-06-04 16:38:32.832 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 24.4163ms
2024-06-04 16:38:32.834 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:32.834 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 40.3854ms
2024-06-04 16:38:32.838 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:32.840 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/41/hasimages - 200 null application/json; charset=utf-8 98.9752ms
2024-06-04 16:38:32.841 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:32.842 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 101.6452ms
2024-06-04 16:38:32.848 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 109.728ms
2024-06-04 16:38:32.853 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/41/images - null null
2024-06-04 16:38:32.860 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:32.862 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:32.867 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:32.902 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:38:33.045 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_41.zip' ...
2024-06-04 16:38:33.110 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 241.1152ms
2024-06-04 16:38:33.112 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:33.113 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/41/images - 200 1823381 application/zip 260.47ms
2024-06-04 16:38:33.221 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:38:33.221 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 16:38:33.221 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/40/hasimages - null null
2024-06-04 16:38:33.221 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:38:33.225 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:33.228 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:33.231 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:33.235 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:33.235 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:33.236 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:33.237 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:33.238 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:33.239 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:33.240 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:33.244 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:33.253 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:33.258 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:33.242 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:33.263 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:33.267 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:33.267 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:33.274 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:33.278 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 27.5909ms
2024-06-04 16:38:33.275 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:33.282 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 35.9085ms
2024-06-04 16:38:33.285 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:33.287 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:33.289 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 32.8784ms
2024-06-04 16:38:33.291 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:33.293 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 24.6019ms
2024-06-04 16:38:33.296 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 75.4502ms
2024-06-04 16:38:33.298 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:33.301 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 80.5325ms
2024-06-04 16:38:33.304 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:33.309 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 87.94ms
2024-06-04 16:38:33.315 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/40/hasimages - 200 null application/json; charset=utf-8 93.7549ms
2024-06-04 16:38:33.321 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/40/images - null null
2024-06-04 16:38:33.326 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:33.327 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:33.329 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:33.337 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:38:33.756 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_40.zip' ...
2024-06-04 16:38:33.934 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 602.5946ms
2024-06-04 16:38:33.938 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:33.940 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/40/images - 200 5205121 application/zip 620.0962ms
2024-06-04 16:38:35.002 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:38:35.021 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2627 - null null
2024-06-04 16:38:35.014 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/24 - null null
2024-06-04 16:38:35.023 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/35/hasimages - null null
2024-06-04 16:38:35.027 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.030 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.033 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.037 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.038 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:35.039 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:35.040 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:35.041 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:35.042 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:35.044 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:35.045 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:35.046 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:35.065 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:35.065 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:35.075 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:35.085 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:35.086 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:35.090 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:35.101 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:35.092 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:35.109 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 57.7588ms
2024-06-04 16:38:35.109 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 59.7537ms
2024-06-04 16:38:35.113 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 41.095ms
2024-06-04 16:38:35.118 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 52.8979ms
2024-06-04 16:38:35.120 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:35.126 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:35.129 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:35.132 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:35.135 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2627 - 200 null application/json; charset=utf-8 116.2972ms
2024-06-04 16:38:35.137 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 135.3998ms
2024-06-04 16:38:35.140 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/35/hasimages - 200 null application/json; charset=utf-8 117.805ms
2024-06-04 16:38:35.141 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/24 - 200 null application/json; charset=utf-8 127.27ms
2024-06-04 16:38:35.173 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/35/images - null null
2024-06-04 16:38:35.178 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.180 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:35.183 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:35.201 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:38:35.464 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_35.zip' ...
2024-06-04 16:38:35.540 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 352.2931ms
2024-06-04 16:38:35.542 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:35.543 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/35/images - 200 3420310 application/zip 370.7707ms
2024-06-04 16:38:35.660 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:38:35.663 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2627 - null null
2024-06-04 16:38:35.666 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 16:38:35.672 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/33/hasimages - null null
2024-06-04 16:38:35.670 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.672 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:35.676 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.681 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.682 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:35.685 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:35.686 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:35.688 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:35.689 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:35.693 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:35.698 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:35.707 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:35.710 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:35.698 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:35.716 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:35.717 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:35.719 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:35.722 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:35.724 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:35.728 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 22.399ms
2024-06-04 16:38:35.726 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 25.716ms
2024-06-04 16:38:35.731 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 39.674ms
2024-06-04 16:38:35.733 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 22.0604ms
2024-06-04 16:38:35.734 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:35.736 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:35.738 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:35.739 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:35.741 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 73.1232ms
2024-06-04 16:38:35.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2627 - 200 null application/json; charset=utf-8 79.4228ms
2024-06-04 16:38:35.745 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/33/hasimages - 200 null application/json; charset=utf-8 73.6518ms
2024-06-04 16:38:35.743 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 83.9979ms
2024-06-04 16:38:35.751 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/33/images - null null
2024-06-04 16:38:35.764 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.765 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:35.766 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:35.772 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:38:35.823 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_33.zip' ...
2024-06-04 16:38:35.838 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 70.036ms
2024-06-04 16:38:35.841 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:35.842 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/33/images - 200 734935 application/zip 91.8262ms
2024-06-04 16:38:35.892 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:38:35.896 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:38:35.898 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.899 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 16:38:35.902 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.903 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/hasimages - null null
2024-06-04 16:38:35.904 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:35.908 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.909 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:35.913 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:35.915 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:35.917 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:35.918 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:35.925 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:35.920 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:35.930 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:35.938 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:35.937 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:35.943 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:35.947 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:35.954 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:35.960 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:35.955 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:35.963 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 39.9666ms
2024-06-04 16:38:35.966 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:35.968 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 32.3125ms
2024-06-04 16:38:35.970 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 39.6718ms
2024-06-04 16:38:35.972 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:35.973 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 24.5844ms
2024-06-04 16:38:35.975 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:35.977 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:35.978 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 87.296ms
2024-06-04 16:38:35.980 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:35.982 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 83.1084ms
2024-06-04 16:38:35.983 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 87.847ms
2024-06-04 16:38:35.988 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/hasimages - 200 null application/json; charset=utf-8 85.392ms
2024-06-04 16:38:36.004 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/images - null null
2024-06-04 16:38:36.008 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.010 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:36.011 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:36.019 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:38:36.363 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_31.zip' ...
2024-06-04 16:38:36.412 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 398.4987ms
2024-06-04 16:38:36.414 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:38:36.415 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/images - 200 2092537 application/zip 411.4642ms
2024-06-04 16:38:36.482 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:38:36.484 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:38:36.488 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:38:36.493 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.493 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/29/hasimages - null null
2024-06-04 16:38:36.494 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:36.498 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.500 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:36.506 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.508 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:36.510 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:36.513 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:36.523 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:36.512 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:36.531 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:36.531 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:36.547 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:36.558 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:36.558 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:36.560 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:36.560 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:36.573 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:36.565 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:36.576 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 60.662ms
2024-06-04 16:38:36.577 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 41.0672ms
2024-06-04 16:38:36.579 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 39.5084ms
2024-06-04 16:38:36.582 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 36.4638ms
2024-06-04 16:38:36.584 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:36.587 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:36.589 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:36.590 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:36.592 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 110.6303ms
2024-06-04 16:38:36.593 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 105.2187ms
2024-06-04 16:38:36.594 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 110.7824ms
2024-06-04 16:38:36.607 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 16:38:36.610 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:38:36.604 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:38:36.596 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/29/hasimages - 200 null application/json; charset=utf-8 103.8821ms
2024-06-04 16:38:36.615 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/1/hasimages - null null
2024-06-04 16:38:36.616 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.619 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.621 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.628 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.628 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:36.629 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:36.630 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:36.631 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:36.632 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:36.633 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:36.635 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:36.636 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:36.646 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:36.656 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:36.653 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:36.643 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:36.657 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:36.660 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:36.663 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:36.665 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:36.668 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 17.1336ms
2024-06-04 16:38:36.667 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 24.7558ms
2024-06-04 16:38:36.671 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 23.8331ms
2024-06-04 16:38:36.672 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 34.4701ms
2024-06-04 16:38:36.674 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:36.676 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:36.677 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:36.679 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:36.680 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/1/hasimages - 200 null application/json; charset=utf-8 66.0457ms
2024-06-04 16:38:36.682 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 72.4059ms
2024-06-04 16:38:36.683 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 79.6206ms
2024-06-04 16:38:36.685 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 77.9891ms
2024-06-04 16:38:36.698 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:38:36.701 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:38:36.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:38:36.705 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/25/hasimages - null null
2024-06-04 16:38:36.707 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.713 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.717 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.721 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:36.723 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:36.724 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:36.725 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:36.726 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:36.728 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:36.730 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:36.734 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:36.742 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:38:36.731 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:36.746 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:36.754 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:38:36.753 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:38:36.760 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:36.762 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:36.768 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 31.223ms
2024-06-04 16:38:36.770 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:38:36.774 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:36.781 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 25.837ms
2024-06-04 16:38:36.778 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:38:36.780 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 33.826ms
2024-06-04 16:38:36.776 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 36.1117ms
2024-06-04 16:38:36.784 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:36.786 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 87.7627ms
2024-06-04 16:38:36.788 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:38:36.798 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/25/hasimages - 200 null application/json; charset=utf-8 94.0613ms
2024-06-04 16:38:36.792 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 94.0035ms
2024-06-04 16:38:36.790 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:36.811 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 111.0621ms
2024-06-04 16:38:45.054 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 16:38:45.060 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:45.062 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:38:45.063 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:45.070 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 16:38:45.075 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:38:45.076 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 9.7541ms
2024-06-04 16:38:45.078 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:38:45.080 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 26.4807ms
2024-06-04 16:38:51.781 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 16:38:51.787 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:51.788 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:38:51.790 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:51.795 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 16:38:51.800 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:38:51.801 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 9.9187ms
2024-06-04 16:38:51.803 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 16:38:51.804 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 23.5345ms
2024-06-04 16:38:53.997 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:38:54.002 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:54.003 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:54.006 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:38:54.016 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:38:54.021 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:38:54.023 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 14.2359ms
2024-06-04 16:38:54.025 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:38:54.026 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 29.6266ms
2024-06-04 16:38:54.034 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/874 - null null
2024-06-04 16:38:54.037 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:54.038 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:54.039 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:38:54.047 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:38:54.050 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:38:54.051 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 9.1088ms
2024-06-04 16:38:54.053 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:38:54.054 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/874 - 200 null application/json; charset=utf-8 20.5691ms
2024-06-04 16:38:54.061 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/stats/874 - null null
2024-06-04 16:38:54.065 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:38:54.066 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetReportStats (AquaDefender-Backend)'
2024-06-04 16:38:54.070 +03:00 [INF] Route matched with {action = "GetReportStats", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReportStats(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:38:54.108 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0
2024-06-04 16:38:54.129 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__status_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Status] = @__status_1
2024-06-04 16:38:54.135 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__status_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Status] = @__status_1
2024-06-04 16:38:54.139 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__status_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Status] = @__status_1
2024-06-04 16:38:54.150 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 16:38:54.155 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 16:38:54.159 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 16:38:54.163 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 16:38:54.167 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 16:38:54.170 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.DTOs.ReportStatisticsDto'.
2024-06-04 16:38:54.174 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetReportStats (AquaDefender-Backend) in 101.7472ms
2024-06-04 16:38:54.176 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetReportStats (AquaDefender-Backend)'
2024-06-04 16:38:54.177 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/stats/874 - 200 null application/json; charset=utf-8 116.4795ms
2024-06-04 16:40:37.383 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 16:40:37.385 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 16:40:37.385 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 16:40:37.395 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.398 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.401 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.402 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 16:40:37.404 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 16:40:37.405 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 16:40:37.406 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:37.407 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:37.410 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:37.419 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:40:37.420 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:40:37.429 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:40:37.431 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:40:37.433 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:40:37.435 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:40:37.437 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 24.5654ms
2024-06-04 16:40:37.438 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 22.07ms
2024-06-04 16:40:37.440 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 19.042ms
2024-06-04 16:40:37.442 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 16:40:37.443 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 16:40:37.445 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 16:40:37.446 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 63.5041ms
2024-06-04 16:40:37.447 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 61.7537ms
2024-06-04 16:40:37.449 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 63.7591ms
2024-06-04 16:40:37.458 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/875 - null null
2024-06-04 16:40:37.461 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:40:37.456 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/12 - null null
2024-06-04 16:40:37.463 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/24/hasimages - null null
2024-06-04 16:40:37.464 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.468 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.471 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.475 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.477 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:37.478 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:37.479 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:37.480 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:37.481 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:37.482 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:37.484 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:37.483 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:37.496 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:37.501 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:37.490 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:37.510 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:37.510 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:37.512 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:37.514 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:37.515 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 25.6716ms
2024-06-04 16:40:37.518 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:37.519 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 25.5918ms
2024-06-04 16:40:37.521 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 34.9068ms
2024-06-04 16:40:37.522 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:37.524 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 23.234ms
2024-06-04 16:40:37.526 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:37.527 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:37.529 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 68.1833ms
2024-06-04 16:40:37.530 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:37.531 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/24/hasimages - 200 null application/json; charset=utf-8 69.0217ms
2024-06-04 16:40:37.532 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/875 - 200 null application/json; charset=utf-8 74.84ms
2024-06-04 16:40:37.537 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/12 - 200 null application/json; charset=utf-8 81.6314ms
2024-06-04 16:40:37.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/24/images - null null
2024-06-04 16:40:37.552 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.553 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:40:37.554 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:37.561 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:40:37.572 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_24.zip' ...
2024-06-04 16:40:37.578 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 22.0015ms
2024-06-04 16:40:37.580 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:40:37.581 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/24/images - 200 72253 application/zip 33.7631ms
2024-06-04 16:40:37.607 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/15 - null null
2024-06-04 16:40:37.612 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1079 - null null
2024-06-04 16:40:37.614 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.615 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:40:37.619 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.619 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/37/hasimages - null null
2024-06-04 16:40:37.621 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:37.628 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.629 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:37.633 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.635 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:37.636 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:37.638 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:37.644 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:37.639 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:37.649 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:37.653 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:37.653 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:37.645 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:37.659 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:37.664 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:37.657 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:37.694 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:37.698 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 47.2523ms
2024-06-04 16:40:37.701 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:37.702 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 55.2199ms
2024-06-04 16:40:37.704 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 62.0046ms
2024-06-04 16:40:37.706 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:37.708 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 46.7324ms
2024-06-04 16:40:37.710 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:37.711 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:37.713 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 98.7287ms
2024-06-04 16:40:37.715 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:37.716 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1079 - 200 null application/json; charset=utf-8 104.4878ms
2024-06-04 16:40:37.717 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/15 - 200 null application/json; charset=utf-8 110.9788ms
2024-06-04 16:40:37.723 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/37/hasimages - 200 null application/json; charset=utf-8 103.7261ms
2024-06-04 16:40:37.730 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:40:37.735 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 16:40:37.736 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:40:37.740 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/40/hasimages - null null
2024-06-04 16:40:37.743 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.749 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.752 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.754 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.755 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:37.756 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:37.757 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:37.758 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:37.760 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:37.761 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:37.763 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:37.767 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:37.771 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:37.777 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:37.762 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:37.780 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:37.782 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:37.792 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 27.0195ms
2024-06-04 16:40:37.788 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:37.793 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 23.8938ms
2024-06-04 16:40:37.784 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:37.799 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:37.802 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:37.803 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:37.804 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 29.7867ms
2024-06-04 16:40:37.806 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 76.508ms
2024-06-04 16:40:37.808 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 22.1177ms
2024-06-04 16:40:37.809 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 75.1732ms
2024-06-04 16:40:37.811 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:37.817 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:37.823 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/40/hasimages - 200 null application/json; charset=utf-8 83.0648ms
2024-06-04 16:40:37.824 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 88.2927ms
2024-06-04 16:40:37.833 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/40/images - null null
2024-06-04 16:40:37.837 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:37.838 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:40:37.839 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:37.845 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:40:38.139 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_40.zip' ...
2024-06-04 16:40:38.238 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 395.796ms
2024-06-04 16:40:38.240 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:40:38.242 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/40/images - 200 5205121 application/zip 409.8769ms
2024-06-04 16:40:38.412 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:40:38.414 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 16:40:38.422 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.422 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.424 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.418 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.417 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:40:38.420 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/39/hasimages - null null
2024-06-04 16:40:38.431 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.432 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:38.436 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.440 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.442 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.445 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:38.445 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.451 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 25.9556ms
2024-06-04 16:40:38.446 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.452 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:38.453 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:38.455 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.460 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:38.465 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 50.4138ms
2024-06-04 16:40:38.456 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:38.466 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:38.479 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:38.468 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 20.1566ms
2024-06-04 16:40:38.481 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:38.483 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:38.485 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.486 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 24.3582ms
2024-06-04 16:40:38.488 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 12.3616ms
2024-06-04 16:40:38.489 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 77.0843ms
2024-06-04 16:40:38.491 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.493 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.497 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 81.0677ms
2024-06-04 16:40:38.499 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/39/hasimages - 200 null application/json; charset=utf-8 79.2594ms
2024-06-04 16:40:38.505 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:40:38.510 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:40:38.511 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 16:40:38.512 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.513 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/28/hasimages - null null
2024-06-04 16:40:38.515 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.518 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.519 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.522 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.524 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.525 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.527 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.528 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.529 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.534 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:38.530 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:38.534 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:38.543 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:38.550 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:38.539 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:38.546 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:38.553 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 20.9834ms
2024-06-04 16:40:38.555 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:38.558 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:38.560 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:38.561 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.563 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 14.4295ms
2024-06-04 16:40:38.564 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 26.7781ms
2024-06-04 16:40:38.566 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 21.5322ms
2024-06-04 16:40:38.567 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 62.477ms
2024-06-04 16:40:38.568 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.570 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.571 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.576 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/28/hasimages - 200 null application/json; charset=utf-8 63.4326ms
2024-06-04 16:40:38.577 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 68.0427ms
2024-06-04 16:40:38.579 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 68.2059ms
2024-06-04 16:40:38.586 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/28/images - null null
2024-06-04 16:40:38.592 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.593 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:40:38.595 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:38.599 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:40:38.633 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_28.zip' ...
2024-06-04 16:40:38.647 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 50.5642ms
2024-06-04 16:40:38.649 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:40:38.650 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/28/images - 200 495919 application/zip 64.3492ms
2024-06-04 16:40:38.680 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:40:38.683 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 16:40:38.686 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:40:38.687 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.688 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/10/hasimages - null null
2024-06-04 16:40:38.692 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.698 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.700 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.702 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.704 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.705 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.708 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.709 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.713 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:38.717 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:38.719 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:38.725 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:38.711 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.730 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:38.732 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:38.734 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:38.740 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:38.741 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:38.743 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 28.4419ms
2024-06-04 16:40:38.745 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 24.3295ms
2024-06-04 16:40:38.748 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:38.749 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 23.4172ms
2024-06-04 16:40:38.751 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.752 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.753 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 17.9432ms
2024-06-04 16:40:38.755 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.757 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 77.205ms
2024-06-04 16:40:38.759 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 73.3279ms
2024-06-04 16:40:38.761 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.763 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/10/hasimages - 200 null application/json; charset=utf-8 75.1955ms
2024-06-04 16:40:38.772 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 89.7256ms
2024-06-04 16:40:38.780 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:40:38.784 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 16:40:38.785 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.788 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:40:38.789 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.790 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.792 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/1/hasimages - null null
2024-06-04 16:40:38.794 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.795 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.797 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.799 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.800 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.805 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.801 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.808 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:38.808 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:38.811 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:38.817 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:38.828 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:38.818 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:38.823 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:38.832 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:38.830 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:38.834 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 30.8198ms
2024-06-04 16:40:38.837 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:38.838 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 13.9204ms
2024-06-04 16:40:38.840 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 27.4993ms
2024-06-04 16:40:38.842 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.843 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 23.9644ms
2024-06-04 16:40:38.845 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.846 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.847 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 67.455ms
2024-06-04 16:40:38.849 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.850 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/1/hasimages - 200 null application/json; charset=utf-8 59.0749ms
2024-06-04 16:40:38.852 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 67.8454ms
2024-06-04 16:40:38.856 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 69.0258ms
2024-06-04 16:40:38.868 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:40:38.864 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:40:38.872 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.871 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:40:38.875 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/29/hasimages - null null
2024-06-04 16:40:38.876 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.877 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.880 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.884 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.885 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.886 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.887 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.888 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.889 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.894 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:38.897 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:38.903 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:38.908 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:38.896 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:38.911 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:38.914 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:38.916 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:38.918 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:38.920 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:38.922 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 23.1044ms
2024-06-04 16:40:38.923 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 19.7883ms
2024-06-04 16:40:38.925 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 33.7966ms
2024-06-04 16:40:38.927 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 18.8564ms
2024-06-04 16:40:38.928 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.930 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.931 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.933 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.934 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 69.6922ms
2024-06-04 16:40:38.935 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 64.3155ms
2024-06-04 16:40:38.936 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 68.369ms
2024-06-04 16:40:38.937 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/29/hasimages - 200 null application/json; charset=utf-8 62.6965ms
2024-06-04 16:40:38.949 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:40:38.953 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:40:38.955 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:40:38.956 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.960 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.964 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/25/hasimages - null null
2024-06-04 16:40:38.964 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.965 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:38.966 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:38.969 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:40:38.969 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:38.971 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.972 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:40:38.975 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:40:38.982 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:40:38.989 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:40:38.985 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:40:38.973 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:38.992 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:40:38.993 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:40:38.996 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:40:38.997 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:40:38.999 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 22.0368ms
2024-06-04 16:40:39.000 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 14.4727ms
2024-06-04 16:40:39.008 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:40:39.002 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 20.3071ms
2024-06-04 16:40:39.009 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:40:39.010 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:40:39.012 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 63.2277ms
2024-06-04 16:40:39.014 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:40:39.016 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:40:39.017 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 62.5601ms
2024-06-04 16:40:39.022 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 69.7832ms
2024-06-04 16:40:39.024 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 20.1414ms
2024-06-04 16:40:39.033 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:40:39.034 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/25/hasimages - 200 null application/json; charset=utf-8 70.8127ms
2024-06-04 16:42:09.697 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 16:42:09.697 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 16:42:09.718 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:09.697 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 16:42:09.752 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:09.753 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 16:42:09.757 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:09.758 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 16:42:09.760 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:09.761 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 16:42:09.762 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:09.766 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:09.780 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:42:09.787 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:42:09.789 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 16:42:09.791 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:42:09.794 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:42:09.797 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 16:42:09.798 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 33.6879ms
2024-06-04 16:42:09.800 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 21.2963ms
2024-06-04 16:42:09.802 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 28.911ms
2024-06-04 16:42:09.807 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 16:42:09.815 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 16:42:09.816 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 16:42:09.818 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 122.067ms
2024-06-04 16:42:09.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 124.0911ms
2024-06-04 16:42:09.822 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 124.9266ms
2024-06-04 16:42:09.838 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:42:09.841 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:42:09.864 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:42:09.865 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/27/hasimages - null null
2024-06-04 16:42:09.866 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:09.869 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:09.879 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:09.883 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:09.884 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:09.886 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:09.887 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:09.888 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:09.889 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:09.891 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:09.892 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:09.893 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:09.906 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:09.906 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:09.917 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:09.915 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:09.911 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:09.927 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:09.928 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 28.1171ms
2024-06-04 16:42:09.930 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:09.938 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:09.933 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:09.936 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 40.7748ms
2024-06-04 16:42:09.963 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 122.3994ms
2024-06-04 16:42:09.962 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 52.6914ms
2024-06-04 16:42:09.964 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 59.2419ms
2024-06-04 16:42:09.969 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:09.975 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:09.977 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:09.978 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 142.848ms
2024-06-04 16:42:09.979 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/27/hasimages - 200 null application/json; charset=utf-8 114.5209ms
2024-06-04 16:42:09.981 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 116.8533ms
2024-06-04 16:42:09.989 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/5 - null null
2024-06-04 16:42:09.992 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/356 - null null
2024-06-04 16:42:09.997 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.000 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.005 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.006 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.007 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.010 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.021 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:10.024 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:10.029 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/22/hasimages - null null
2024-06-04 16:42:10.029 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:42:10.030 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:10.031 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:10.033 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.037 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.040 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 27.8111ms
2024-06-04 16:42:10.041 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 23.6949ms
2024-06-04 16:42:10.042 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.043 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.044 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.046 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.047 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:10.049 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:10.050 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/5 - 200 null application/json; charset=utf-8 61.1406ms
2024-06-04 16:42:10.052 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/356 - 200 null application/json; charset=utf-8 59.9996ms
2024-06-04 16:42:10.058 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:10.063 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:10.072 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:10.074 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:10.075 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 21.1626ms
2024-06-04 16:42:10.077 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 18.3748ms
2024-06-04 16:42:10.079 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.081 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.083 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/22/hasimages - 200 null application/json; charset=utf-8 53.4325ms
2024-06-04 16:42:10.084 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 55.7728ms
2024-06-04 16:42:10.093 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/22/images - null null
2024-06-04 16:42:10.097 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.098 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:42:10.099 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:10.107 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:42:10.143 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_22.zip' ...
2024-06-04 16:42:10.155 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 53.3631ms
2024-06-04 16:42:10.156 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:42:10.158 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/22/images - 200 495919 application/zip 64.5787ms
2024-06-04 16:42:10.216 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:42:10.222 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 16:42:10.223 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.224 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:42:10.227 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.228 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/41/hasimages - null null
2024-06-04 16:42:10.228 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.232 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.233 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.237 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.239 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.240 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.242 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.246 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:10.241 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.249 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:10.258 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:10.262 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:10.249 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:10.265 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:10.266 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:10.269 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:10.274 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:10.275 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:10.277 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 25.5143ms
2024-06-04 16:42:10.279 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 23.4454ms
2024-06-04 16:42:10.282 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 37.9383ms
2024-06-04 16:42:10.284 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 22.3367ms
2024-06-04 16:42:10.286 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.289 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.291 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.292 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.294 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 70.0559ms
2024-06-04 16:42:10.295 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 74.3431ms
2024-06-04 16:42:10.296 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 80.7307ms
2024-06-04 16:42:10.298 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/41/hasimages - 200 null application/json; charset=utf-8 70.2202ms
2024-06-04 16:42:10.306 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/41/images - null null
2024-06-04 16:42:10.322 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.323 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:42:10.325 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:10.333 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:42:10.457 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_41.zip' ...
2024-06-04 16:42:10.494 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 164.6615ms
2024-06-04 16:42:10.495 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:42:10.496 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/41/images - 200 1823381 application/zip 190.2838ms
2024-06-04 16:42:10.590 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:42:10.595 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 16:42:10.595 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.598 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 16:42:10.600 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.608 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.603 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/32/hasimages - null null
2024-06-04 16:42:10.606 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.601 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.611 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.616 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.618 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.626 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.620 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.629 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:10.629 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:10.631 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:10.640 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:10.640 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:10.655 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:10.648 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:10.657 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:10.658 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 34.6225ms
2024-06-04 16:42:10.661 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:10.663 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:10.665 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 31.4673ms
2024-06-04 16:42:10.666 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.668 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 18.1459ms
2024-06-04 16:42:10.670 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 26.318ms
2024-06-04 16:42:10.672 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.673 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 78.6224ms
2024-06-04 16:42:10.674 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.676 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.677 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 87.8686ms
2024-06-04 16:42:10.682 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/32/hasimages - 200 null application/json; charset=utf-8 79.7775ms
2024-06-04 16:42:10.684 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 86.2998ms
2024-06-04 16:42:10.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/32/images - null null
2024-06-04 16:42:10.699 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.700 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:42:10.702 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:10.707 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:42:10.737 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_32.zip' ...
2024-06-04 16:42:10.749 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 45.3397ms
2024-06-04 16:42:10.752 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:42:10.754 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/32/images - 200 468498 application/zip 61.9293ms
2024-06-04 16:42:10.776 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:42:10.779 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 16:42:10.782 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:42:10.780 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.786 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/10/hasimages - null null
2024-06-04 16:42:10.788 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.794 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.795 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.799 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.800 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.802 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.804 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.804 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.806 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.813 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:10.808 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:10.817 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:10.829 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:10.823 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:10.837 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:10.839 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:10.841 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:10.849 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:10.844 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:10.852 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 40.4706ms
2024-06-04 16:42:10.854 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 29.3781ms
2024-06-04 16:42:10.855 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 24.1839ms
2024-06-04 16:42:10.857 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 39.8602ms
2024-06-04 16:42:10.860 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.862 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.864 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.866 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 91.8878ms
2024-06-04 16:42:10.869 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/10/hasimages - 200 null application/json; charset=utf-8 84.6761ms
2024-06-04 16:42:10.880 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:42:10.871 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 89.9665ms
2024-06-04 16:42:10.888 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.886 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 16:42:10.882 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:42:10.873 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 94.4671ms
2024-06-04 16:42:10.891 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/hasimages - null null
2024-06-04 16:42:10.895 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.901 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.904 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.915 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.917 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.919 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.922 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.927 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:10.920 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.929 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:10.930 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:10.935 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:10.933 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:10.941 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:10.942 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:10.944 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:10.950 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:10.949 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:10.953 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 29.0836ms
2024-06-04 16:42:10.954 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 22.9582ms
2024-06-04 16:42:10.955 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 18.6584ms
2024-06-04 16:42:10.958 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:10.959 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:10.960 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:10.962 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:10.963 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 17.306ms
2024-06-04 16:42:10.964 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 84.9352ms
2024-06-04 16:42:10.965 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 80.1693ms
2024-06-04 16:42:10.967 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/hasimages - 200 null application/json; charset=utf-8 76.3007ms
2024-06-04 16:42:10.968 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:10.980 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 98.5033ms
2024-06-04 16:42:10.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/images - null null
2024-06-04 16:42:10.993 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:10.994 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:42:10.996 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:11.004 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 16:42:11.115 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_31.zip' ...
2024-06-04 16:42:11.157 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 159.1113ms
2024-06-04 16:42:11.159 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 16:42:11.161 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/images - 200 2092537 application/zip 171.2813ms
2024-06-04 16:42:11.217 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 16:42:11.222 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 16:42:11.225 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.225 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:42:11.229 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/1/hasimages - null null
2024-06-04 16:42:11.230 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.232 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:11.237 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.241 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.243 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:11.245 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:11.246 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:11.248 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:11.249 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:11.254 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:11.257 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:11.264 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:11.269 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:11.256 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:11.273 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:11.274 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:11.276 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:11.279 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:11.280 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:11.283 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 18.6815ms
2024-06-04 16:42:11.282 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 22.663ms
2024-06-04 16:42:11.286 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 35.1773ms
2024-06-04 16:42:11.287 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 17.7783ms
2024-06-04 16:42:11.289 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:11.290 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:11.291 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:11.293 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:11.294 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 69.9568ms
2024-06-04 16:42:11.295 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 74.5469ms
2024-06-04 16:42:11.297 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 80.0424ms
2024-06-04 16:42:11.305 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:42:11.309 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:42:11.307 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:42:11.298 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/1/hasimages - 200 null application/json; charset=utf-8 69.9006ms
2024-06-04 16:42:11.312 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/25/hasimages - null null
2024-06-04 16:42:11.314 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.318 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.320 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.326 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.327 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:11.328 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:11.329 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:11.330 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:11.331 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:11.332 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:11.334 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:11.343 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:11.347 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:11.333 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:11.340 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:11.356 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:11.350 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:11.352 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:11.360 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:11.361 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:11.362 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 21.906ms
2024-06-04 16:42:11.364 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 19.1514ms
2024-06-04 16:42:11.366 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 29.9479ms
2024-06-04 16:42:11.368 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 13.8416ms
2024-06-04 16:42:11.370 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:11.372 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:11.374 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:11.375 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:11.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 67.6263ms
2024-06-04 16:42:11.378 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/25/hasimages - 200 null application/json; charset=utf-8 66.5081ms
2024-06-04 16:42:11.379 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 74.4442ms
2024-06-04 16:42:11.380 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 73.9574ms
2024-06-04 16:42:11.391 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 16:42:11.387 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 16:42:11.389 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 16:42:11.394 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/29/hasimages - null null
2024-06-04 16:42:11.401 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.404 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.407 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.410 +03:00 [INF] CORS policy execution successful.
2024-06-04 16:42:11.411 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:11.412 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:11.413 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:11.415 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:11.416 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 16:42:11.418 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:11.425 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 16:42:11.429 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 16:42:11.421 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 16:42:11.419 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 16:42:11.431 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 16:42:11.442 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 16:42:11.438 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 16:42:11.435 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 16:42:11.444 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 21.376ms
2024-06-04 16:42:11.446 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 16:42:11.448 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 16:42:11.451 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 23.956ms
2024-06-04 16:42:11.452 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 16:42:11.454 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 13.147ms
2024-06-04 16:42:11.455 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 18.7218ms
2024-06-04 16:42:11.457 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 16:42:11.458 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 66.6978ms
2024-06-04 16:42:11.460 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 16:42:11.461 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 16:42:11.463 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 76.2769ms
2024-06-04 16:42:11.468 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 79.0052ms
2024-06-04 16:42:11.470 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/29/hasimages - 200 null application/json; charset=utf-8 76.0923ms
2024-06-04 17:22:13.753 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 17:22:14.002 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 17:22:14.254 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 17:22:14.256 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 17:22:14.260 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 17:22:14.262 +03:00 [INF] Hosting environment: Development
2024-06-04 17:22:14.264 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 17:22:15.998 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 17:22:16.450 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 460.57ms
2024-06-04 17:22:16.483 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 17:22:16.498 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 14.9232ms
2024-06-04 17:22:16.499 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 17:22:16.581 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 81.4467ms
2024-06-04 17:22:16.721 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 17:22:17.030 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 310.2514ms
2024-06-04 17:22:24.152 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 17:22:25.407 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 17:22:25.440 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:22:31.120 +03:00 [INF] Executed DbCommand (260ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 17:22:31.428 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:22:31.500 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 6042.3883ms
2024-06-04 17:22:31.510 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 17:22:31.548 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 7395.6643ms
2024-06-04 17:31:38.791 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 17:31:39.016 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 17:31:39.233 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 17:31:39.235 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 17:31:39.239 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 17:31:39.241 +03:00 [INF] Hosting environment: Development
2024-06-04 17:31:39.242 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 17:31:47.401 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 17:31:47.800 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 405.9631ms
2024-06-04 17:31:47.881 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 17:31:47.881 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 17:31:47.908 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 27.5299ms
2024-06-04 17:31:48.082 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 201.6193ms
2024-06-04 17:31:48.236 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 17:31:48.559 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 323.5254ms
2024-06-04 17:33:20.693 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 17:33:20.698 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 17:33:20.694 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 17:33:20.726 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:20.726 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:20.726 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:20.906 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 17:33:20.906 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 17:33:20.906 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 17:33:20.958 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:20.958 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:20.958 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:25.622 +03:00 [INF] Executed DbCommand (527ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:33:25.926 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:33:25.986 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 5017.5902ms
2024-06-04 17:33:25.990 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 17:33:26.001 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 5308.778ms
2024-06-04 17:33:26.036 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:33:26.041 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:33:26.045 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:33:26.049 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:33:26.051 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 5080.8402ms
2024-06-04 17:33:26.052 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 5085.6306ms
2024-06-04 17:33:26.055 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 17:33:26.057 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 17:33:26.059 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 5361.7859ms
2024-06-04 17:33:26.061 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 5369.3401ms
2024-06-04 17:33:26.071 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:33:26.071 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 17:33:26.071 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:33:26.072 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/27/hasimages - null null
2024-06-04 17:33:26.077 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:26.080 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:26.083 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:26.085 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:26.089 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:26.089 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:26.089 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:26.090 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:26.109 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:26.109 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:26.109 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:26.109 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:26.258 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:26.273 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:26.281 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 167.0318ms
2024-06-04 17:33:26.284 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:26.288 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/27/hasimages - 200 null application/json; charset=utf-8 216.282ms
2024-06-04 17:33:26.314 +03:00 [INF] Executed DbCommand (53ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:26.356 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:26.366 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 249.5102ms
2024-06-04 17:33:26.370 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:26.371 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 299.9894ms
2024-06-04 17:33:26.406 +03:00 [INF] Executed DbCommand (115ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:26.452 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:26.456 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 337.484ms
2024-06-04 17:33:26.459 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:26.461 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 390.1297ms
2024-06-04 17:33:27.398 +03:00 [INF] Executed DbCommand (69ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:27.418 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:27.426 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 1315.7232ms
2024-06-04 17:33:27.428 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:27.430 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 1358.3863ms
2024-06-04 17:33:27.437 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/356 - null null
2024-06-04 17:33:27.437 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/5 - null null
2024-06-04 17:33:27.437 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:33:27.437 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/22/hasimages - null null
2024-06-04 17:33:27.441 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.444 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.446 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.451 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.451 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:27.452 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:27.453 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:27.454 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:27.455 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:27.456 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:27.458 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:27.459 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:27.469 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:27.470 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:27.483 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:27.495 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:27.488 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:27.508 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:27.510 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:27.511 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:27.516 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 48.2443ms
2024-06-04 17:33:27.519 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 42.0423ms
2024-06-04 17:33:27.513 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 52.0284ms
2024-06-04 17:33:27.521 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:27.522 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 59.6633ms
2024-06-04 17:33:27.524 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:27.526 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:27.527 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 90.4376ms
2024-06-04 17:33:27.529 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:27.531 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/22/hasimages - 200 null application/json; charset=utf-8 93.9314ms
2024-06-04 17:33:27.532 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/356 - 200 null application/json; charset=utf-8 95.8693ms
2024-06-04 17:33:27.537 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/5 - 200 null application/json; charset=utf-8 100.9223ms
2024-06-04 17:33:27.543 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/22/images - null null
2024-06-04 17:33:27.554 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.556 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:33:27.561 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:27.598 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:33:27.649 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_22.zip' ...
2024-06-04 17:33:27.681 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 118.172ms
2024-06-04 17:33:27.684 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:33:27.685 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/22/images - 200 495919 application/zip 142.3586ms
2024-06-04 17:33:27.744 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/3 - null null
2024-06-04 17:33:27.745 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/162 - null null
2024-06-04 17:33:27.745 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:33:27.745 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/16/hasimages - null null
2024-06-04 17:33:27.752 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.755 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.759 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.762 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.764 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:27.765 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:27.765 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:27.766 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:27.767 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:27.769 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:27.771 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:27.770 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:27.783 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:27.779 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:27.790 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:27.787 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:27.794 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:27.796 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 19.8965ms
2024-06-04 17:33:27.799 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:27.799 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:27.801 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:27.802 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:27.804 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 22.0254ms
2024-06-04 17:33:27.807 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 33.6004ms
2024-06-04 17:33:27.808 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 22.3334ms
2024-06-04 17:33:27.809 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/162 - 200 null application/json; charset=utf-8 64.4061ms
2024-06-04 17:33:27.810 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:27.812 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:27.813 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:27.818 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/16/hasimages - 200 null application/json; charset=utf-8 73.1565ms
2024-06-04 17:33:27.819 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/3 - 200 null application/json; charset=utf-8 75.4176ms
2024-06-04 17:33:27.820 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 75.5446ms
2024-06-04 17:33:27.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 17:33:27.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 17:33:27.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:33:27.826 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/39/hasimages - null null
2024-06-04 17:33:27.835 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.837 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.841 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.843 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.844 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:27.845 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:27.845 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:27.846 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:27.848 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:27.849 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:27.851 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:27.850 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:27.858 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:27.863 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:27.877 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:27.867 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:27.881 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:27.883 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:27.884 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 30.8886ms
2024-06-04 17:33:27.886 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:27.893 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:27.892 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:27.890 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 34.6711ms
2024-06-04 17:33:27.893 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 33.8308ms
2024-06-04 17:33:27.896 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 30.8891ms
2024-06-04 17:33:27.897 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 71.4528ms
2024-06-04 17:33:27.899 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:27.900 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:27.902 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:27.907 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 80.8951ms
2024-06-04 17:33:27.908 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/39/hasimages - 200 null application/json; charset=utf-8 82.4591ms
2024-06-04 17:33:27.918 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/hasimages - null null
2024-06-04 17:33:27.916 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 17:33:27.915 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:33:27.916 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:33:27.910 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 83.9903ms
2024-06-04 17:33:27.931 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.933 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.936 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.939 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:27.944 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:27.945 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:27.946 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:27.947 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:27.948 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:27.950 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:27.951 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:27.953 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:27.961 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:27.966 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:27.970 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:27.999 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:28.007 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:28.009 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:28.013 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 57.7876ms
2024-06-04 17:33:28.016 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:28.017 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 59.7822ms
2024-06-04 17:33:28.018 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:28.019 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.022 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.020 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 53.7096ms
2024-06-04 17:33:28.025 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 62.8731ms
2024-06-04 17:33:28.026 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/hasimages - 200 null application/json; charset=utf-8 107.6188ms
2024-06-04 17:33:28.027 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 111.6642ms
2024-06-04 17:33:28.029 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.030 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.040 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 124.6751ms
2024-06-04 17:33:28.042 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 127.8048ms
2024-06-04 17:33:28.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/images - null null
2024-06-04 17:33:28.054 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.055 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:33:28.057 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:28.065 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:33:28.192 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_31.zip' ...
2024-06-04 17:33:28.235 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 175.8735ms
2024-06-04 17:33:28.237 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:33:28.239 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/images - 200 2092537 application/zip 194.3996ms
2024-06-04 17:33:28.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 17:33:28.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:33:28.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/32/hasimages - null null
2024-06-04 17:33:28.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 17:33:28.304 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.309 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.311 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.315 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.316 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.317 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.317 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.318 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.319 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:28.320 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:28.330 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:28.322 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:28.323 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:28.337 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:28.336 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:28.345 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 19.7375ms
2024-06-04 17:33:28.343 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:28.349 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:28.351 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.353 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:28.353 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:28.358 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 56.5394ms
2024-06-04 17:33:28.356 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:28.360 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 29.8149ms
2024-06-04 17:33:28.361 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 22.8453ms
2024-06-04 17:33:28.367 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 25.0758ms
2024-06-04 17:33:28.369 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.370 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.372 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.374 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 72.8239ms
2024-06-04 17:33:28.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 75.532ms
2024-06-04 17:33:28.375 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/32/hasimages - 200 null application/json; charset=utf-8 73.8479ms
2024-06-04 17:33:28.381 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/32/images - null null
2024-06-04 17:33:28.394 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.395 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:33:28.397 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:28.404 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:33:28.442 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_32.zip' ...
2024-06-04 17:33:28.458 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 57.8117ms
2024-06-04 17:33:28.460 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:33:28.461 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/32/images - 200 468498 application/zip 80.5595ms
2024-06-04 17:33:28.481 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:33:28.481 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:33:28.481 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:33:28.482 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/25/hasimages - null null
2024-06-04 17:33:28.486 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.490 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.493 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.496 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.497 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.498 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.499 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.500 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.501 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:28.503 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:28.504 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:28.513 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:28.506 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:28.520 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:28.519 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:28.526 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 18.4549ms
2024-06-04 17:33:28.524 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:28.529 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:28.533 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.535 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:28.536 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:28.537 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:28.539 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 57.7964ms
2024-06-04 17:33:28.541 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 25.8538ms
2024-06-04 17:33:28.544 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 33.4149ms
2024-06-04 17:33:28.545 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 20.0528ms
2024-06-04 17:33:28.550 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.551 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.553 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.554 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 72.7996ms
2024-06-04 17:33:28.557 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/25/hasimages - 200 null application/json; charset=utf-8 75.7648ms
2024-06-04 17:33:28.562 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:33:28.561 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:33:28.561 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:33:28.555 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 74.2975ms
2024-06-04 17:33:28.562 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/29/hasimages - null null
2024-06-04 17:33:28.568 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.570 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.573 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.579 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.581 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.582 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.582 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.583 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.584 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:28.585 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:28.588 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:28.587 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:28.596 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:28.606 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:28.603 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:28.610 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:28.619 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:28.620 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:28.623 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:28.624 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 33.1831ms
2024-06-04 17:33:28.628 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 29.1099ms
2024-06-04 17:33:28.629 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 34.2969ms
2024-06-04 17:33:28.631 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.631 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:28.633 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.635 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.636 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 74.4874ms
2024-06-04 17:33:28.639 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 35.8402ms
2024-06-04 17:33:28.640 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/29/hasimages - 200 null application/json; charset=utf-8 78.4399ms
2024-06-04 17:33:28.641 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 79.9229ms
2024-06-04 17:33:28.648 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.659 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 98.3113ms
2024-06-04 17:33:28.665 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:33:28.666 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:33:28.666 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/1/hasimages - null null
2024-06-04 17:33:28.666 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 17:33:28.670 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.674 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.677 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.682 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:33:28.682 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.683 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.684 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.685 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.686 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:28.688 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:33:28.691 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:33:28.700 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:33:28.690 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:33:28.704 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:33:28.712 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:33:28.709 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:33:28.715 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:33:28.716 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:33:28.719 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 25.4636ms
2024-06-04 17:33:28.721 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:33:28.724 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:33:28.725 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 27.5347ms
2024-06-04 17:33:28.726 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:33:28.728 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 26.9137ms
2024-06-04 17:33:28.729 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 19.0006ms
2024-06-04 17:33:28.731 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:33:28.733 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 68.193ms
2024-06-04 17:33:28.735 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:33:28.736 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:33:28.738 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 71.9334ms
2024-06-04 17:33:28.744 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 78.2233ms
2024-06-04 17:33:28.745 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/1/hasimages - 200 null application/json; charset=utf-8 79.6445ms
2024-06-04 17:34:27.527 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 17:34:27.534 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:27.536 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 17:34:27.543 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:27.563 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 17:34:27.567 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:34:27.570 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 23.4061ms
2024-06-04 17:34:27.573 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 17:34:27.574 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 47.1129ms
2024-06-04 17:34:30.570 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/13/cities - null null
2024-06-04 17:34:30.576 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:30.578 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCitiesByCountyId (AquaDefender-Backend)'
2024-06-04 17:34:30.585 +03:00 [INF] Route matched with {action = "GetAllCitiesByCountyId", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[AquaDefender_Backend.Domain.City]]] GetAllCitiesByCountyId(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:30.597 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:30.613 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[CountyId] = @__countyId_0
2024-06-04 17:34:30.617 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.City, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:34:30.621 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCitiesByCountyId (AquaDefender-Backend) in 31.8697ms
2024-06-04 17:34:30.628 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCitiesByCountyId (AquaDefender-Backend)'
2024-06-04 17:34:30.630 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/13/cities - 200 null application/json; charset=utf-8 61.0345ms
2024-06-04 17:34:34.035 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/WaterInfo/city/943 - null null
2024-06-04 17:34:34.041 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:34.044 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.WaterInfoController.GetAllWaterInfosByCityId (AquaDefender-Backend)'
2024-06-04 17:34:34.050 +03:00 [INF] Route matched with {action = "GetAllWaterInfosByCityId", controller = "WaterInfo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWaterInfosByCityId(Int32) on controller AquaDefender_Backend.Controllers.WaterInfoController (AquaDefender-Backend).
2024-06-04 17:34:34.068 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[AdditionalNotes], [w].[CityId], [w].[CountyId], [w].[DateReported], [w].[Name]
FROM [WaterInfos] AS [w]
WHERE [w].[CityId] = @__cityId_0
2024-06-04 17:34:34.081 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.WaterInfo, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:34:34.087 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.WaterInfoController.GetAllWaterInfosByCityId (AquaDefender-Backend) in 34.3689ms
2024-06-04 17:34:34.090 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.WaterInfoController.GetAllWaterInfosByCityId (AquaDefender-Backend)'
2024-06-04 17:34:34.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/WaterInfo/city/943 - 200 null application/json; charset=utf-8 56.9519ms
2024-06-04 17:34:35.459 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/WaterInfo/report?date=2024-05-22&cityId=943 - null null
2024-06-04 17:34:35.465 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:35.466 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.WaterInfoController.GetReportByDateAndCity (AquaDefender-Backend)'
2024-06-04 17:34:35.472 +03:00 [INF] Route matched with {action = "GetReportByDateAndCity", controller = "WaterInfo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReportByDateAndCity(System.DateTime, Int32) on controller AquaDefender_Backend.Controllers.WaterInfoController (AquaDefender-Backend).
2024-06-04 17:34:35.521 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime2), @__cityId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [w].[Id], [w].[AdditionalNotes], [w].[CityId], [w].[CountyId], [w].[DateReported], [w].[Name]
FROM [WaterInfos] AS [w]
WHERE CONVERT(date, [w].[DateReported]) = @__date_Date_0 AND [w].[CityId] = @__cityId_1
2024-06-04 17:34:35.525 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.WaterInfo'.
2024-06-04 17:34:35.527 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.WaterInfoController.GetReportByDateAndCity (AquaDefender-Backend) in 52.7556ms
2024-06-04 17:34:35.529 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.WaterInfoController.GetReportByDateAndCity (AquaDefender-Backend)'
2024-06-04 17:34:35.530 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/WaterInfo/report?date=2024-05-22&cityId=943 - 200 null application/json; charset=utf-8 70.7699ms
2024-06-04 17:34:35.534 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/WaterValues/waterinfo/41 - null null
2024-06-04 17:34:35.539 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:35.540 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.WaterValuesController.GetAllWaterValuesByWaterInfoId (AquaDefender-Backend)'
2024-06-04 17:34:35.545 +03:00 [INF] Route matched with {action = "GetAllWaterValuesByWaterInfoId", controller = "WaterValues"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllWaterValuesByWaterInfoId(Int32) on controller AquaDefender_Backend.Controllers.WaterValuesController (AquaDefender-Backend).
2024-06-04 17:34:35.563 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__waterInfoId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [w].[Id], [w].[IdWaterInfo], [w].[MaximumAllowedValue], [w].[MeasurementUnit], [w].[Name], [w].[UserProvidedValue]
FROM [WaterValues] AS [w]
WHERE [w].[IdWaterInfo] = @__waterInfoId_0
2024-06-04 17:34:35.577 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.WaterValues, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:34:35.582 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.WaterValuesController.GetAllWaterValuesByWaterInfoId (AquaDefender-Backend) in 34.1656ms
2024-06-04 17:34:35.585 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.WaterValuesController.GetAllWaterValuesByWaterInfoId (AquaDefender-Backend)'
2024-06-04 17:34:35.586 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/WaterValues/waterinfo/41 - 200 null application/json; charset=utf-8 52.1866ms
2024-06-04 17:34:45.727 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 17:34:45.729 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 17:34:45.729 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 17:34:45.735 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.742 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.746 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.747 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 17:34:45.748 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 17:34:45.749 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 17:34:45.751 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:45.752 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:45.753 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:45.762 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:34:45.770 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:34:45.776 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:34:45.778 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:34:45.780 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:34:45.784 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 28.4309ms
2024-06-04 17:34:45.783 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:34:45.786 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 25.803ms
2024-06-04 17:34:45.788 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 17:34:45.790 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 20.2134ms
2024-06-04 17:34:45.792 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 17:34:45.793 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 65.7823ms
2024-06-04 17:34:45.795 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 17:34:45.796 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 67.7249ms
2024-06-04 17:34:45.801 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 72.1713ms
2024-06-04 17:34:45.805 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:34:45.805 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:34:45.807 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 17:34:45.811 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.814 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.816 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.817 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:45.818 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:45.818 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:45.819 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:45.821 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:45.822 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:45.827 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:45.836 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:45.838 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:45.832 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:45.839 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/30/hasimages - null null
2024-06-04 17:34:45.840 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:45.842 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 17.8011ms
2024-06-04 17:34:45.897 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:45.902 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.905 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 73.0906ms
2024-06-04 17:34:45.907 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:45.909 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 81.6328ms
2024-06-04 17:34:45.910 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:45.912 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:45.913 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 108.39ms
2024-06-04 17:34:45.915 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:45.916 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:45.917 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 110.4973ms
2024-06-04 17:34:45.922 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 117.6283ms
2024-06-04 17:34:45.929 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:45.935 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:45.937 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 12.728ms
2024-06-04 17:34:45.939 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:45.940 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/30/hasimages - 200 null application/json; charset=utf-8 101.0436ms
2024-06-04 17:34:45.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 17:34:45.943 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:34:45.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:34:45.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/27/hasimages - null null
2024-06-04 17:34:45.947 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.949 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.952 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.954 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:45.955 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:45.956 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:45.957 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:45.958 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:45.959 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:45.960 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:45.961 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:45.962 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:45.967 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:45.976 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:45.974 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:45.986 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:45.988 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:45.991 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:45.992 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 28.0245ms
2024-06-04 17:34:45.994 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 21.1237ms
2024-06-04 17:34:45.997 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 28.8988ms
2024-06-04 17:34:45.998 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:46.000 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:46.001 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:46.003 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 58.9985ms
2024-06-04 17:34:46.004 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 60.6755ms
2024-06-04 17:34:46.006 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 62.8877ms
2024-06-04 17:34:47.009 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:47.031 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:47.041 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 1066.6586ms
2024-06-04 17:34:47.049 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:47.057 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/27/hasimages - 200 null application/json; charset=utf-8 1113.3459ms
2024-06-04 17:34:47.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/162 - null null
2024-06-04 17:34:47.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:34:47.069 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/3 - null null
2024-06-04 17:34:47.071 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/16/hasimages - null null
2024-06-04 17:34:47.094 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.109 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.125 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.140 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.146 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:47.151 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:47.157 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:47.162 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:47.169 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:47.177 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:47.192 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:47.212 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:47.244 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:47.185 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:47.228 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:47.291 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:47.257 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:47.270 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:47.301 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:47.317 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:47.321 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 117.0747ms
2024-06-04 17:34:47.329 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 90.9669ms
2024-06-04 17:34:47.337 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 116.0961ms
2024-06-04 17:34:47.349 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 67.4991ms
2024-06-04 17:34:47.355 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:47.364 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:47.373 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:47.382 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:47.390 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/162 - 200 null application/json; charset=utf-8 320.0528ms
2024-06-04 17:34:47.409 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/3 - 200 null application/json; charset=utf-8 341.5357ms
2024-06-04 17:34:47.426 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 17:34:47.431 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/28/hasimages - null null
2024-06-04 17:34:47.424 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:34:47.397 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/16/hasimages - 200 null application/json; charset=utf-8 326.7789ms
2024-06-04 17:34:47.424 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:34:47.404 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 333.8639ms
2024-06-04 17:34:47.478 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.492 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.508 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.542 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.569 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:47.574 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:47.579 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:47.585 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:47.592 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:47.599 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:47.606 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:47.634 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:47.668 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:47.613 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:47.652 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:47.697 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:47.682 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:47.716 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:47.725 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:47.733 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 71.3428ms
2024-06-04 17:34:47.740 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 113.6708ms
2024-06-04 17:34:47.754 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:47.758 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 113.6356ms
2024-06-04 17:34:47.764 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:47.771 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:47.784 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 77.2717ms
2024-06-04 17:34:47.791 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:47.798 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 375.4014ms
2024-06-04 17:34:47.804 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 378.3291ms
2024-06-04 17:34:47.812 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:47.819 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/28/hasimages - 200 null application/json; charset=utf-8 388.554ms
2024-06-04 17:34:47.867 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 444.3049ms
2024-06-04 17:34:47.895 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/28/images - null null
2024-06-04 17:34:47.924 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:47.929 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:34:47.937 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:47.975 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:34:48.075 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_28.zip' ...
2024-06-04 17:34:48.133 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 184.6661ms
2024-06-04 17:34:48.143 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:34:48.150 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/28/images - 200 495919 application/zip 255.8074ms
2024-06-04 17:34:48.257 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:34:48.257 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:34:48.257 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 17:34:48.259 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/hasimages - null null
2024-06-04 17:34:48.276 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:48.292 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:48.308 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:48.323 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:48.328 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:48.333 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:48.338 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:48.345 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:48.352 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:48.359 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:48.372 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:48.365 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:48.423 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:48.441 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:48.394 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:48.408 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:48.454 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:48.468 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:48.485 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:48.497 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:48.514 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 79.6258ms
2024-06-04 17:34:48.505 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 88.825ms
2024-06-04 17:34:48.525 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 142.176ms
2024-06-04 17:34:48.534 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 134.7563ms
2024-06-04 17:34:48.541 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:48.549 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:48.559 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:48.567 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:48.574 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 318.3195ms
2024-06-04 17:34:48.587 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 330.9871ms
2024-06-04 17:34:48.580 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/hasimages - 200 null application/json; charset=utf-8 322.6158ms
2024-06-04 17:34:48.592 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 335.6316ms
2024-06-04 17:34:48.602 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/images - null null
2024-06-04 17:34:48.677 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:48.683 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:34:48.690 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:48.711 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:34:49.056 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_31.zip' ...
2024-06-04 17:34:49.177 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 473.5117ms
2024-06-04 17:34:49.186 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:34:49.194 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/images - 200 2092537 application/zip 593.0737ms
2024-06-04 17:34:49.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:34:49.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 17:34:49.343 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:34:49.344 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/10/hasimages - null null
2024-06-04 17:34:49.359 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.375 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.392 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.405 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.409 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:49.411 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:49.412 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:49.414 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:49.415 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:49.416 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:49.417 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:49.423 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:49.432 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:49.418 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:49.427 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:49.436 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:49.441 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:49.434 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:49.443 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:49.444 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 15.277ms
2024-06-04 17:34:49.447 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:49.450 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 29.6243ms
2024-06-04 17:34:49.450 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 25.5456ms
2024-06-04 17:34:49.452 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:49.455 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 16.3626ms
2024-06-04 17:34:49.456 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:49.458 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:49.459 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 116.3158ms
2024-06-04 17:34:49.460 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:49.462 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 120.8959ms
2024-06-04 17:34:49.464 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 122.412ms
2024-06-04 17:34:49.468 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/10/hasimages - 200 null application/json; charset=utf-8 125.6192ms
2024-06-04 17:34:49.473 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 17:34:49.473 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:34:49.474 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:34:49.474 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/1/hasimages - null null
2024-06-04 17:34:49.483 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.485 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.490 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.492 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.493 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:49.493 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:49.494 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:49.495 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:49.497 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:49.498 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:49.504 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:49.500 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:49.499 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:49.510 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:49.514 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:49.519 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 17.3092ms
2024-06-04 17:34:49.508 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:49.518 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:49.522 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:49.523 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:49.526 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:49.527 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:49.530 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 57.2657ms
2024-06-04 17:34:49.529 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 17.1044ms
2024-06-04 17:34:49.532 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 26.9582ms
2024-06-04 17:34:49.533 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 17.2792ms
2024-06-04 17:34:49.538 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:49.539 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:49.540 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:49.541 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/1/hasimages - 200 null application/json; charset=utf-8 67.687ms
2024-06-04 17:34:49.542 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 69.6846ms
2024-06-04 17:34:49.544 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 69.9391ms
2024-06-04 17:34:49.556 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:34:49.556 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:34:49.556 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:34:49.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/29/hasimages - null null
2024-06-04 17:34:49.559 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.561 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.565 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.567 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.568 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:49.568 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:49.569 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:49.570 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:49.572 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:49.573 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:49.575 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:49.583 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:49.588 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:49.578 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:49.574 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:49.590 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:49.592 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:49.599 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:49.599 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 18.1029ms
2024-06-04 17:34:49.594 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:49.601 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 16.0936ms
2024-06-04 17:34:49.605 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:49.605 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:49.608 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:49.606 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 30.1131ms
2024-06-04 17:34:49.610 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 13.5752ms
2024-06-04 17:34:49.611 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 55.1992ms
2024-06-04 17:34:49.612 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/29/hasimages - 200 null application/json; charset=utf-8 55.7654ms
2024-06-04 17:34:49.614 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:49.615 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:49.623 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 67.2744ms
2024-06-04 17:34:49.624 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 68.4637ms
2024-06-04 17:34:49.633 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/15/hasimages - null null
2024-06-04 17:34:49.632 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:34:49.633 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/263 - null null
2024-06-04 17:34:49.633 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/4 - null null
2024-06-04 17:34:49.635 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.638 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.640 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.643 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:34:49.644 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:49.644 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:49.646 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:49.646 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:49.648 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:34:49.649 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:34:49.650 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:49.662 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:34:49.666 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:34:49.651 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:34:49.657 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:34:49.669 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:34:49.675 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:34:49.671 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:34:49.678 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:34:49.680 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 22.4678ms
2024-06-04 17:34:49.683 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:34:49.684 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 19.9535ms
2024-06-04 17:34:49.686 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:34:49.685 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 31.4866ms
2024-06-04 17:34:49.689 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 16.0971ms
2024-06-04 17:34:49.690 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:34:49.691 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 59.0837ms
2024-06-04 17:34:49.692 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:34:49.694 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:34:49.695 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/263 - 200 null application/json; charset=utf-8 62.9986ms
2024-06-04 17:34:49.700 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/15/hasimages - 200 null application/json; charset=utf-8 67.5461ms
2024-06-04 17:34:49.701 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/4 - 200 null application/json; charset=utf-8 68.7854ms
2024-06-04 17:36:08.022 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 17:36:08.049 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:08.053 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:08.058 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:08.076 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:08.092 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:08.094 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 28.221ms
2024-06-04 17:36:08.096 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:08.099 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 78.872ms
2024-06-04 17:36:08.104 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/874 - null null
2024-06-04 17:36:08.112 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:08.113 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:08.114 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:08.120 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:08.123 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:08.124 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 8.625ms
2024-06-04 17:36:08.126 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:08.128 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/874 - 200 null application/json; charset=utf-8 24.0178ms
2024-06-04 17:36:08.132 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/stats/874 - null null
2024-06-04 17:36:08.137 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:08.137 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetReportStats (AquaDefender-Backend)'
2024-06-04 17:36:08.142 +03:00 [INF] Route matched with {action = "GetReportStats", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetReportStats(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:08.185 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0
2024-06-04 17:36:08.205 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__status_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Status] = @__status_1
2024-06-04 17:36:08.214 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__status_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Status] = @__status_1
2024-06-04 17:36:08.217 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__status_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Status] = @__status_1
2024-06-04 17:36:08.229 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 17:36:08.233 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 17:36:08.238 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 17:36:08.244 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 17:36:08.248 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32), @__severity_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Reports] AS [r]
WHERE [r].[CityId] = @__cityId_0 AND [r].[Severity] = @__severity_1
2024-06-04 17:36:08.251 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.DTOs.ReportStatisticsDto'.
2024-06-04 17:36:08.255 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetReportStats (AquaDefender-Backend) in 110.2994ms
2024-06-04 17:36:08.257 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetReportStats (AquaDefender-Backend)'
2024-06-04 17:36:08.258 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/stats/874 - 200 null application/json; charset=utf-8 127.1087ms
2024-06-04 17:36:11.429 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 17:36:11.430 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 17:36:11.430 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 17:36:11.437 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.443 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.448 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.448 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 17:36:11.449 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 17:36:11.450 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 17:36:11.452 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.453 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.454 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.461 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:36:11.465 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:36:11.475 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:36:11.478 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:36:11.480 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:36:11.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:36:11.483 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 26.7514ms
2024-06-04 17:36:11.485 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 23.7947ms
2024-06-04 17:36:11.487 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 20.3329ms
2024-06-04 17:36:11.489 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 17:36:11.490 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 17:36:11.492 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 17:36:11.493 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 64.6246ms
2024-06-04 17:36:11.495 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 65.8903ms
2024-06-04 17:36:11.502 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:36:11.502 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:36:11.508 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/30/hasimages - null null
2024-06-04 17:36:11.502 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 17:36:11.497 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 67.372ms
2024-06-04 17:36:11.515 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.517 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.521 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.524 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.529 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:11.530 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:11.531 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:11.532 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:11.533 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:11.535 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:11.543 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:11.536 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.538 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:11.560 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:11.565 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:11.552 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:11.551 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:11.571 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:11.573 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:11.576 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 35.0174ms
2024-06-04 17:36:11.580 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:11.581 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 25.2945ms
2024-06-04 17:36:11.584 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:11.582 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 19.5492ms
2024-06-04 17:36:11.588 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 41.3593ms
2024-06-04 17:36:11.593 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:11.595 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 93.4404ms
2024-06-04 17:36:11.597 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:11.598 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:11.599 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/30/hasimages - 200 null application/json; charset=utf-8 91.1622ms
2024-06-04 17:36:11.604 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 102.8203ms
2024-06-04 17:36:11.612 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/22/hasimages - null null
2024-06-04 17:36:11.606 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 104.1808ms
2024-06-04 17:36:11.609 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/5 - null null
2024-06-04 17:36:11.610 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/356 - null null
2024-06-04 17:36:11.610 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:11.623 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.629 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.632 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.635 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.636 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:11.637 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:11.638 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:11.639 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:11.640 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.641 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:11.648 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:11.642 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:11.654 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:11.655 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:11.659 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:11.644 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:11.662 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:11.663 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 17.0906ms
2024-06-04 17:36:11.665 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:11.677 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:11.670 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:11.673 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 22.5808ms
2024-06-04 17:36:11.681 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 23.7805ms
2024-06-04 17:36:11.682 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/22/hasimages - 200 null application/json; charset=utf-8 70.489ms
2024-06-04 17:36:11.685 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:11.686 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:11.688 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:11.692 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 24.9918ms
2024-06-04 17:36:11.694 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/5 - 200 null application/json; charset=utf-8 85.2277ms
2024-06-04 17:36:11.695 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/356 - 200 null application/json; charset=utf-8 85.4979ms
2024-06-04 17:36:11.697 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:11.706 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 96.376ms
2024-06-04 17:36:11.711 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/22/images - null null
2024-06-04 17:36:11.715 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.716 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:11.717 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.724 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:36:11.756 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_22.zip' ...
2024-06-04 17:36:11.771 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 51.0158ms
2024-06-04 17:36:11.773 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:11.774 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/22/images - 200 495919 application/zip 63.535ms
2024-06-04 17:36:11.813 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/24/hasimages - null null
2024-06-04 17:36:11.813 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:11.813 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/12 - null null
2024-06-04 17:36:11.813 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/875 - null null
2024-06-04 17:36:11.817 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.822 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.825 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.830 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.831 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:11.832 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:11.833 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:11.834 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:11.836 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.838 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:11.839 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:11.840 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:11.854 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:11.857 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:11.848 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:11.844 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:11.860 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:11.862 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:11.865 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:11.867 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:11.868 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 17.8291ms
2024-06-04 17:36:11.870 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 14.8353ms
2024-06-04 17:36:11.871 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 24.9253ms
2024-06-04 17:36:11.873 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 30.8727ms
2024-06-04 17:36:11.874 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:11.875 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:11.877 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:11.878 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:11.879 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/12 - 200 null application/json; charset=utf-8 66.5603ms
2024-06-04 17:36:11.881 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/875 - 200 null application/json; charset=utf-8 67.7711ms
2024-06-04 17:36:11.882 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 69.3668ms
2024-06-04 17:36:11.883 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/24/hasimages - 200 null application/json; charset=utf-8 70.121ms
2024-06-04 17:36:11.886 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/24/images - null null
2024-06-04 17:36:11.900 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.901 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:11.903 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.906 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:36:11.920 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_24.zip' ...
2024-06-04 17:36:11.925 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 20.0728ms
2024-06-04 17:36:11.927 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:11.929 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/24/images - 200 72253 application/zip 43.2314ms
2024-06-04 17:36:11.943 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:36:11.943 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 17:36:11.943 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 17:36:11.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/39/hasimages - null null
2024-06-04 17:36:11.947 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.950 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.953 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.956 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:11.957 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:11.958 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:11.959 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:11.960 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:11.961 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:11.962 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:11.970 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:11.965 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:11.973 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:11.977 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:11.980 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:11.983 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:11.964 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:11.985 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 18.3227ms
2024-06-04 17:36:11.987 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:11.992 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:11.993 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:11.988 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 17.0009ms
2024-06-04 17:36:11.996 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 17.546ms
2024-06-04 17:36:11.998 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:11.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 56.7903ms
2024-06-04 17:36:12.000 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.002 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.004 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 13.6691ms
2024-06-04 17:36:12.008 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 65.6325ms
2024-06-04 17:36:12.010 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/39/hasimages - 200 null application/json; charset=utf-8 66.242ms
2024-06-04 17:36:12.011 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 76.6755ms
2024-06-04 17:36:12.023 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:36:12.024 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2627 - null null
2024-06-04 17:36:12.024 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 17:36:12.024 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/33/hasimages - null null
2024-06-04 17:36:12.027 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.030 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.032 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.035 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.036 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.037 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.038 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.038 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.040 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.041 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.048 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:12.042 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:12.043 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:12.055 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:12.058 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:12.063 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:12.051 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:12.065 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 19.9273ms
2024-06-04 17:36:12.067 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:12.070 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:12.072 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:12.073 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.075 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 18.4464ms
2024-06-04 17:36:12.076 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 15.3283ms
2024-06-04 17:36:12.078 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 28.3213ms
2024-06-04 17:36:12.079 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 56.2034ms
2024-06-04 17:36:12.081 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.082 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.083 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 64.5874ms
2024-06-04 17:36:12.090 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/33/hasimages - 200 null application/json; charset=utf-8 65.8996ms
2024-06-04 17:36:12.091 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2627 - 200 null application/json; charset=utf-8 67.0878ms
2024-06-04 17:36:12.095 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/33/images - null null
2024-06-04 17:36:12.104 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.105 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:12.106 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:12.110 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:36:12.158 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_33.zip' ...
2024-06-04 17:36:12.179 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 70.8385ms
2024-06-04 17:36:12.181 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:12.183 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/33/images - 200 734935 application/zip 88.715ms
2024-06-04 17:36:12.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:36:12.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:36:12.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 17:36:12.214 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/28/hasimages - null null
2024-06-04 17:36:12.218 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.223 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.225 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.228 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.230 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.231 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.232 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.233 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.234 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.236 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.243 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:12.237 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:12.247 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:12.253 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:12.250 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:12.238 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:12.258 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:12.261 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 20.7154ms
2024-06-04 17:36:12.265 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 14.2803ms
2024-06-04 17:36:12.264 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:12.256 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:12.267 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.269 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.271 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:12.273 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 27.9497ms
2024-06-04 17:36:12.274 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 60.6385ms
2024-06-04 17:36:12.275 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 61.1139ms
2024-06-04 17:36:12.277 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 14.2945ms
2024-06-04 17:36:12.278 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.286 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.287 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 73.4213ms
2024-06-04 17:36:12.288 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/28/hasimages - 200 null application/json; charset=utf-8 74.4799ms
2024-06-04 17:36:12.292 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/28/images - null null
2024-06-04 17:36:12.298 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.299 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:12.300 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:12.304 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:36:12.334 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_28.zip' ...
2024-06-04 17:36:12.349 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 46.3357ms
2024-06-04 17:36:12.350 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:12.353 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/28/images - 200 495919 application/zip 61.0707ms
2024-06-04 17:36:12.391 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:36:12.391 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 17:36:12.391 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:12.391 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/1/hasimages - null null
2024-06-04 17:36:12.396 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.400 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.404 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.407 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.409 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.411 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.411 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.412 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.413 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.415 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.417 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:12.425 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:12.421 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:12.430 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:12.416 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:12.432 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:12.436 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:12.443 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 19.0668ms
2024-06-04 17:36:12.442 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:12.438 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:12.446 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 27.2351ms
2024-06-04 17:36:12.447 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.450 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:12.451 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 23.4266ms
2024-06-04 17:36:12.453 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.454 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 63.3929ms
2024-06-04 17:36:12.456 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 15.8113ms
2024-06-04 17:36:12.457 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.458 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 67.6944ms
2024-06-04 17:36:12.464 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.465 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/1/hasimages - 200 null application/json; charset=utf-8 73.7949ms
2024-06-04 17:36:12.470 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 78.8225ms
2024-06-04 17:36:12.474 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/4 - null null
2024-06-04 17:36:12.475 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/263 - null null
2024-06-04 17:36:12.475 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/15/hasimages - null null
2024-06-04 17:36:12.475 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:12.481 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.483 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.486 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.489 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.490 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.490 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.491 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.492 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.494 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.495 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.502 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:12.505 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:12.496 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:12.497 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:12.509 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:12.511 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:12.519 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:12.514 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:12.522 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 22.8419ms
2024-06-04 17:36:12.523 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 19.2218ms
2024-06-04 17:36:12.525 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:12.528 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:12.529 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.530 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.531 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 15.0026ms
2024-06-04 17:36:12.533 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 20.521ms
2024-06-04 17:36:12.534 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/4 - 200 null application/json; charset=utf-8 60.6703ms
2024-06-04 17:36:12.536 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/263 - 200 null application/json; charset=utf-8 61.8434ms
2024-06-04 17:36:12.537 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.539 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.548 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 73.3773ms
2024-06-04 17:36:12.549 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/15/hasimages - 200 null application/json; charset=utf-8 74.8963ms
2024-06-04 17:36:12.554 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:12.554 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:36:12.554 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:36:12.555 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/25/hasimages - null null
2024-06-04 17:36:12.562 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.564 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.567 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.570 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:12.571 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.572 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.573 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.574 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.575 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:12.576 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.579 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:12.591 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:12.596 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:12.584 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:12.578 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:12.599 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:12.601 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:12.604 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:12.608 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:12.611 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 23.5899ms
2024-06-04 17:36:12.612 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 19.3568ms
2024-06-04 17:36:12.614 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 32.261ms
2024-06-04 17:36:12.618 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:12.619 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:12.621 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:12.622 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:12.624 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 18.169ms
2024-06-04 17:36:12.625 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 70.9022ms
2024-06-04 17:36:12.626 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/25/hasimages - 200 null application/json; charset=utf-8 71.4106ms
2024-06-04 17:36:12.628 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 73.9468ms
2024-06-04 17:36:12.630 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:12.641 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 87.0709ms
2024-06-04 17:36:13.656 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 17:36:13.663 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:13.667 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 17:36:13.671 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:13.680 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 17:36:13.686 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:36:13.688 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 14.3123ms
2024-06-04 17:36:13.691 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 17:36:13.692 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 37.0836ms
2024-06-04 17:36:14.413 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 17:36:14.413 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 17:36:14.413 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 17:36:14.419 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.423 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.426 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.427 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 17:36:14.428 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 17:36:14.429 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 17:36:14.431 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:14.432 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:14.433 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:14.440 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:36:14.447 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:36:14.442 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 17:36:14.449 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:36:14.451 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:36:14.454 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 17:36:14.455 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 20.2452ms
2024-06-04 17:36:14.457 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 12.4366ms
2024-06-04 17:36:14.458 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 19.4183ms
2024-06-04 17:36:14.459 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 17:36:14.461 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 17:36:14.462 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 17:36:14.463 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 51.1251ms
2024-06-04 17:36:14.465 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 51.9532ms
2024-06-04 17:36:14.470 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 17:36:14.470 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:36:14.471 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 17:36:14.466 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 53.124ms
2024-06-04 17:36:14.471 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/41/hasimages - null null
2024-06-04 17:36:14.476 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.479 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.481 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.487 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.488 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:14.489 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:14.489 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:14.490 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:14.491 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:14.492 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:14.495 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:14.503 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:14.507 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:14.494 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:14.511 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:14.515 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:14.512 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:14.521 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:14.520 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:14.523 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 21.5205ms
2024-06-04 17:36:14.525 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 27.5188ms
2024-06-04 17:36:14.527 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 20.3123ms
2024-06-04 17:36:14.529 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:14.531 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:14.532 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:14.533 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:14.535 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 18.9455ms
2024-06-04 17:36:14.537 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 66.5228ms
2024-06-04 17:36:14.538 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 68.0113ms
2024-06-04 17:36:14.539 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/41/hasimages - 200 null application/json; charset=utf-8 68.3663ms
2024-06-04 17:36:14.541 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:14.553 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 82.5683ms
2024-06-04 17:36:14.556 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/41/images - null null
2024-06-04 17:36:14.560 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.561 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:14.562 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:14.568 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:36:14.670 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_41.zip' ...
2024-06-04 17:36:14.711 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 146.0909ms
2024-06-04 17:36:14.713 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:14.715 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/41/images - 200 1823381 application/zip 158.4812ms
2024-06-04 17:36:14.783 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:14.783 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/356 - null null
2024-06-04 17:36:14.783 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/5 - null null
2024-06-04 17:36:14.783 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/22/hasimages - null null
2024-06-04 17:36:14.787 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.790 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.793 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.797 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.798 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:14.798 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:14.799 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:14.800 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:14.801 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:14.802 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:14.805 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:14.813 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:14.809 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:14.804 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:14.817 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:14.828 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:14.821 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:14.823 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:14.830 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:14.833 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:14.833 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 21.6714ms
2024-06-04 17:36:14.835 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 28.4453ms
2024-06-04 17:36:14.837 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 20.953ms
2024-06-04 17:36:14.839 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 14.2255ms
2024-06-04 17:36:14.840 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:14.841 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:14.843 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:14.845 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:14.846 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/356 - 200 null application/json; charset=utf-8 63.9527ms
2024-06-04 17:36:14.848 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 65.198ms
2024-06-04 17:36:14.850 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/5 - 200 null application/json; charset=utf-8 68.2022ms
2024-06-04 17:36:14.849 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/22/hasimages - 200 null application/json; charset=utf-8 66.1188ms
2024-06-04 17:36:14.854 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/22/images - null null
2024-06-04 17:36:14.867 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.869 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:14.870 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:14.874 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:36:14.926 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_22.zip' ...
2024-06-04 17:36:14.943 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 70.6221ms
2024-06-04 17:36:14.945 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:14.947 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/22/images - 200 495919 application/zip 93.7705ms
2024-06-04 17:36:14.976 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/3 - null null
2024-06-04 17:36:14.976 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:14.975 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/162 - null null
2024-06-04 17:36:14.977 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/16/hasimages - null null
2024-06-04 17:36:14.980 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.987 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.990 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.995 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:14.997 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:14.998 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:14.999 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.000 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.001 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.002 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:15.005 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:15.014 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:15.017 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:15.010 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:15.004 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.021 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:15.023 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:15.031 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 18.9519ms
2024-06-04 17:36:15.029 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:15.026 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:15.033 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 16.7097ms
2024-06-04 17:36:15.034 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.037 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:15.039 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 31.942ms
2024-06-04 17:36:15.040 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.041 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 65.2935ms
2024-06-04 17:36:15.042 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 15.1289ms
2024-06-04 17:36:15.044 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.046 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/16/hasimages - 200 null application/json; charset=utf-8 69.8865ms
2024-06-04 17:36:15.050 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.051 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/3 - 200 null application/json; charset=utf-8 75.9962ms
2024-06-04 17:36:15.056 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/162 - 200 null application/json; charset=utf-8 81.0635ms
2024-06-04 17:36:15.061 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:36:15.061 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 17:36:15.061 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 17:36:15.062 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/39/hasimages - null null
2024-06-04 17:36:15.067 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.070 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.073 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.075 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.076 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.077 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.078 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.079 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.080 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.082 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.083 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:15.089 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:15.097 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:15.084 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:15.093 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:15.107 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:15.101 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:15.103 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:15.113 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:15.111 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:15.115 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 28.4942ms
2024-06-04 17:36:15.116 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 20.8717ms
2024-06-04 17:36:15.118 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 12.6834ms
2024-06-04 17:36:15.120 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 28.7846ms
2024-06-04 17:36:15.121 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.123 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.124 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.125 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.127 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 66.1185ms
2024-06-04 17:36:15.128 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 67.4681ms
2024-06-04 17:36:15.129 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/39/hasimages - 200 null application/json; charset=utf-8 67.9533ms
2024-06-04 17:36:15.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:36:15.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:36:15.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 17:36:15.131 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 69.9918ms
2024-06-04 17:36:15.136 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/hasimages - null null
2024-06-04 17:36:15.145 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.148 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.150 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.157 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.158 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.159 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.160 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.161 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.163 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.164 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.166 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:15.173 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:15.182 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:15.177 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:15.165 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:15.187 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:15.188 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:15.190 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:15.195 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:15.197 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 28.0929ms
2024-06-04 17:36:15.198 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 18.3481ms
2024-06-04 17:36:15.200 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 26.4425ms
2024-06-04 17:36:15.203 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:15.204 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.205 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.206 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.208 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 15.9993ms
2024-06-04 17:36:15.209 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 74.8356ms
2024-06-04 17:36:15.211 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/hasimages - 200 null application/json; charset=utf-8 75.9752ms
2024-06-04 17:36:15.213 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 78.454ms
2024-06-04 17:36:15.214 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.226 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 90.5217ms
2024-06-04 17:36:15.231 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/31/images - null null
2024-06-04 17:36:15.233 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.235 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:15.236 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:15.241 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 17:36:15.354 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_31.zip' ...
2024-06-04 17:36:15.400 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 161.4439ms
2024-06-04 17:36:15.402 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 17:36:15.404 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/31/images - 200 2092537 application/zip 173.7775ms
2024-06-04 17:36:15.448 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/10/hasimages - null null
2024-06-04 17:36:15.448 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:36:15.448 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:15.448 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 17:36:15.453 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.455 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.458 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.461 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.462 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.463 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.463 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.464 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.465 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:15.466 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.468 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:15.469 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.482 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:15.487 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:15.473 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:15.478 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:15.489 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:15.491 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:15.494 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:15.496 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:15.497 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 17.0237ms
2024-06-04 17:36:15.499 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 14.0481ms
2024-06-04 17:36:15.500 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 28.7346ms
2024-06-04 17:36:15.503 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 27.2092ms
2024-06-04 17:36:15.504 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.505 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.506 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.508 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.509 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 61.0217ms
2024-06-04 17:36:15.517 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:15.517 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/1/hasimages - null null
2024-06-04 17:36:15.516 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 17:36:15.511 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 62.6981ms
2024-06-04 17:36:15.512 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/10/hasimages - 200 null application/json; charset=utf-8 63.61ms
2024-06-04 17:36:15.513 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 65.3556ms
2024-06-04 17:36:15.516 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 17:36:15.525 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.528 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.531 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.544 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.545 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.546 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.547 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.547 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.548 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:15.549 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:15.550 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.556 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:15.565 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:15.552 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.560 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:15.574 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:15.568 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:15.571 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:15.577 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:15.579 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:15.581 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 26.6687ms
2024-06-04 17:36:15.583 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 20.2081ms
2024-06-04 17:36:15.584 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 26.0333ms
2024-06-04 17:36:15.586 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 14.2447ms
2024-06-04 17:36:15.588 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.589 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.591 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.592 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.595 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 78.293ms
2024-06-04 17:36:15.596 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 79.691ms
2024-06-04 17:36:15.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 17:36:15.599 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 82.4815ms
2024-06-04 17:36:15.604 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 17:36:15.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:15.597 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/1/hasimages - 200 null application/json; charset=utf-8 80.3897ms
2024-06-04 17:36:15.606 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/29/hasimages - null null
2024-06-04 17:36:15.612 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.620 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.622 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.629 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.630 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.632 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.633 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.634 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.635 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.636 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.638 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:15.648 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:15.651 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:15.637 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:15.642 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:15.656 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:15.655 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:15.660 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:15.664 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 15.0741ms
2024-06-04 17:36:15.663 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:15.667 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 21.8673ms
2024-06-04 17:36:15.669 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:15.670 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.672 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 31.7217ms
2024-06-04 17:36:15.673 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.675 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 16.5266ms
2024-06-04 17:36:15.676 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/29/hasimages - 200 null application/json; charset=utf-8 70.4752ms
2024-06-04 17:36:15.677 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.679 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 75.0726ms
2024-06-04 17:36:15.680 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.684 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 79.6237ms
2024-06-04 17:36:15.689 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 84.5752ms
2024-06-04 17:36:15.694 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/263 - null null
2024-06-04 17:36:15.694 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 17:36:15.693 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/4 - null null
2024-06-04 17:36:15.695 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/15/hasimages - null null
2024-06-04 17:36:15.700 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.703 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.706 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.708 +03:00 [INF] CORS policy execution successful.
2024-06-04 17:36:15.709 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.710 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.711 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.712 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.713 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.714 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 17:36:15.717 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 17:36:15.721 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 17:36:15.730 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 17:36:15.726 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 17:36:15.715 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 17:36:15.733 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 17:36:15.736 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 17:36:15.744 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 24.146ms
2024-06-04 17:36:15.743 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 17:36:15.738 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 17:36:15.746 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 17.1444ms
2024-06-04 17:36:15.747 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 17:36:15.750 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 17:36:15.751 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 26.7199ms
2024-06-04 17:36:15.752 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 17:36:15.754 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/263 - 200 null application/json; charset=utf-8 60.0235ms
2024-06-04 17:36:15.756 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 16.0735ms
2024-06-04 17:36:15.757 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 17:36:15.758 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/15/hasimages - 200 null application/json; charset=utf-8 64.0033ms
2024-06-04 17:36:15.763 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 17:36:15.765 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 71.0198ms
2024-06-04 17:36:15.769 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/4 - 200 null application/json; charset=utf-8 76.0014ms
2024-06-04 18:34:18.519 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 18:34:18.519 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 18:34:18.519 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 18:34:18.529 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:18.529 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:18.529 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:18.532 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 18:34:18.532 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 18:34:18.532 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 18:34:18.534 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:18.535 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:18.535 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:20.484 +03:00 [INF] Executed DbCommand (152ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 18:34:20.489 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 18:34:20.493 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 1953.6892ms
2024-06-04 18:34:20.494 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 18:34:20.496 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 200 null application/json; charset=utf-8 1980.8883ms
2024-06-04 18:34:21.353 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 18:34:21.353 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__status_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [r].[Id], [r].[CityId], [r].[CountyId], [r].[Description], [r].[IsAnonymous], [r].[Latitude], [r].[LocationDetails], [r].[Longitude], [r].[ReportDate], [r].[Severity], [r].[Status], [r].[Title], [r].[UserId]
FROM [Reports] AS [r]
WHERE [r].[Status] = @__status_0
ORDER BY NEWID()
2024-06-04 18:34:21.356 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 18:34:21.357 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.Report, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 18:34:21.358 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 2821.5119ms
2024-06-04 18:34:21.360 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 2819.1627ms
2024-06-04 18:34:21.360 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 18:34:21.362 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 18:34:21.363 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 200 null application/json; charset=utf-8 2847.7192ms
2024-06-04 18:34:21.363 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 200 null application/json; charset=utf-8 2848.6543ms
2024-06-04 18:34:21.369 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/3 - null null
2024-06-04 18:34:21.369 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/162 - null null
2024-06-04 18:34:21.370 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 18:34:21.370 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/16/hasimages - null null
2024-06-04 18:34:21.373 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:21.375 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:21.377 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:21.380 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:21.380 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:21.381 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:21.381 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:21.382 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:21.383 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:21.384 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:21.384 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:21.385 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:21.495 +03:00 [INF] Executed DbCommand (106ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:21.501 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:21.503 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 115.1767ms
2024-06-04 18:34:21.505 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:21.506 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/162 - 200 null application/json; charset=utf-8 136.899ms
2024-06-04 18:34:21.539 +03:00 [INF] Executed DbCommand (150ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:21.542 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:21.545 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 158.0577ms
2024-06-04 18:34:21.546 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:21.547 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/3 - 200 null application/json; charset=utf-8 178.1986ms
2024-06-04 18:34:22.420 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:22.423 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:22.424 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 1029.4655ms
2024-06-04 18:34:22.425 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:22.426 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/16/hasimages - 200 null application/json; charset=utf-8 1056.3717ms
2024-06-04 18:34:22.458 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:22.461 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:22.463 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 1072.1837ms
2024-06-04 18:34:22.464 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:22.464 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 1094.7183ms
2024-06-04 18:34:22.467 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 18:34:22.467 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/875 - null null
2024-06-04 18:34:22.467 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/12 - null null
2024-06-04 18:34:22.468 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/24/hasimages - null null
2024-06-04 18:34:22.473 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:22.475 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:22.476 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:22.478 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:22.478 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:22.479 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:22.479 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:22.480 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:22.481 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:22.482 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:22.482 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:22.483 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:22.489 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:22.486 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:22.492 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:22.498 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:22.499 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:22.501 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:22.501 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 15.3467ms
2024-06-04 18:34:22.503 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 18.5369ms
2024-06-04 18:34:22.503 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 14.1265ms
2024-06-04 18:34:22.504 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:22.505 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:22.506 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:22.507 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/875 - 200 null application/json; charset=utf-8 39.5541ms
2024-06-04 18:34:22.508 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 40.3342ms
2024-06-04 18:34:22.508 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/12 - 200 null application/json; charset=utf-8 41.5511ms
2024-06-04 18:34:23.520 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:23.522 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:23.523 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 1031.3517ms
2024-06-04 18:34:23.524 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.525 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/24/hasimages - 200 null application/json; charset=utf-8 1057.5529ms
2024-06-04 18:34:23.528 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/24/images - null null
2024-06-04 18:34:23.531 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.532 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 18:34:23.533 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:23.556 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 18:34:23.565 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_24.zip' ...
2024-06-04 18:34:23.571 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 37.364ms
2024-06-04 18:34:23.572 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 18:34:23.573 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/24/images - 200 72253 application/zip 45.0116ms
2024-06-04 18:34:23.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 18:34:23.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/11/hasimages - null null
2024-06-04 18:34:23.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 18:34:23.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 18:34:23.608 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.611 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.612 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.615 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.615 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.616 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.616 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.617 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.617 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.618 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:23.619 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.625 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:23.619 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:23.624 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:23.629 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:23.633 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:23.629 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:23.634 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:23.635 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 10.778ms
2024-06-04 18:34:23.636 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:23.638 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:23.639 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 18.7177ms
2024-06-04 18:34:23.640 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.641 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 9.8916ms
2024-06-04 18:34:23.641 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 15.1061ms
2024-06-04 18:34:23.642 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.643 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/11/hasimages - 200 null application/json; charset=utf-8 38.3167ms
2024-06-04 18:34:23.644 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.645 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.645 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 40.7645ms
2024-06-04 18:34:23.648 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 43.334ms
2024-06-04 18:34:23.653 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/10/hasimages - null null
2024-06-04 18:34:23.653 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 18:34:23.649 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 44.0317ms
2024-06-04 18:34:23.653 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 18:34:23.653 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 18:34:23.658 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.660 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.663 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.665 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.665 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.666 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.666 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.667 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.668 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:23.668 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.669 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:23.672 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:23.677 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:23.670 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.674 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:23.683 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:23.680 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:23.679 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:23.684 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:23.686 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:23.686 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 10.3096ms
2024-06-04 18:34:23.687 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 16.3074ms
2024-06-04 18:34:23.688 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 14.6046ms
2024-06-04 18:34:23.689 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 8.0813ms
2024-06-04 18:34:23.690 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.691 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.691 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.692 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.693 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 40.0522ms
2024-06-04 18:34:23.694 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/10/hasimages - 200 null application/json; charset=utf-8 40.3818ms
2024-06-04 18:34:23.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/33/hasimages - null null
2024-06-04 18:34:23.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2627 - null null
2024-06-04 18:34:23.698 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 18:34:23.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/19 - null null
2024-06-04 18:34:23.695 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 42.8465ms
2024-06-04 18:34:23.695 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 41.647ms
2024-06-04 18:34:23.705 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.706 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.708 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.709 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.714 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.714 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.715 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.715 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.716 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:23.717 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.717 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.718 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:23.720 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:23.728 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:23.723 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:23.726 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:23.730 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:23.731 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:23.732 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:23.734 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:23.734 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 15.289ms
2024-06-04 18:34:23.735 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 8.537ms
2024-06-04 18:34:23.736 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 14.6798ms
2024-06-04 18:34:23.738 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 13.4775ms
2024-06-04 18:34:23.738 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.739 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.740 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.741 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/33/hasimages - 200 null application/json; charset=utf-8 42.1037ms
2024-06-04 18:34:23.744 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 45.7586ms
2024-06-04 18:34:23.742 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/19 - 200 null application/json; charset=utf-8 43.3556ms
2024-06-04 18:34:23.743 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2627 - 200 null application/json; charset=utf-8 44.1284ms
2024-06-04 18:34:23.746 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/33/images - null null
2024-06-04 18:34:23.754 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.755 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 18:34:23.755 +03:00 [INF] Route matched with {action = "GetImagesByReportId", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetImagesByReportIdAsync(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:23.759 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[IdImage], [r].[ImageUrl], [r].[ReportId]
FROM [ReportImage] AS [r]
WHERE [r].[ReportId] = @__reportId_0
2024-06-04 18:34:23.788 +03:00 [INF] Executing FileStreamResult, sending file with download name 'images_33.zip' ...
2024-06-04 18:34:23.802 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend) in 45.7513ms
2024-06-04 18:34:23.803 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetImagesByReportIdAsync (AquaDefender-Backend)'
2024-06-04 18:34:23.804 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/33/images - 200 734935 application/zip 57.8606ms
2024-06-04 18:34:23.834 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 18:34:23.835 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - null null
2024-06-04 18:34:23.835 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/16 - null null
2024-06-04 18:34:23.835 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/39/hasimages - null null
2024-06-04 18:34:23.837 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.838 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.840 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.841 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.842 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.842 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.843 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.844 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.845 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.846 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.847 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:23.848 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:23.856 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:23.853 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:23.859 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:23.862 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:23.862 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:23.864 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:23.865 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:23.866 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:23.867 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 14.7881ms
2024-06-04 18:34:23.869 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 19.4092ms
2024-06-04 18:34:23.870 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 14.304ms
2024-06-04 18:34:23.871 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 12.3354ms
2024-06-04 18:34:23.872 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.872 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.873 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.874 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.875 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/3 - 200 null application/json; charset=utf-8 40.4598ms
2024-06-04 18:34:23.878 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/39/hasimages - 200 null application/json; charset=utf-8 42.6029ms
2024-06-04 18:34:23.880 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - null null
2024-06-04 18:34:23.880 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - null null
2024-06-04 18:34:23.876 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 41.9971ms
2024-06-04 18:34:23.877 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/16 - 200 null application/json; charset=utf-8 41.8244ms
2024-06-04 18:34:23.881 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 18:34:23.881 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/1/hasimages - null null
2024-06-04 18:34:23.884 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.886 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.891 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.892 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.893 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.893 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.894 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.894 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.895 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.896 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.897 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:23.896 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:23.905 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:23.903 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:23.909 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:23.908 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:23.901 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:23.910 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:23.911 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:23.912 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 8.8213ms
2024-06-04 18:34:23.914 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:23.914 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 14.8298ms
2024-06-04 18:34:23.915 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 9.2198ms
2024-06-04 18:34:23.916 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.917 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 19.2205ms
2024-06-04 18:34:23.918 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.919 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.920 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/1/hasimages - 200 null application/json; charset=utf-8 39.1098ms
2024-06-04 18:34:23.920 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.921 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/1 - 200 null application/json; charset=utf-8 41.2286ms
2024-06-04 18:34:23.922 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 41.4355ms
2024-06-04 18:34:23.927 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 18:34:23.927 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 18:34:23.925 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/1 - 200 null application/json; charset=utf-8 44.9728ms
2024-06-04 18:34:23.927 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 18:34:23.927 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/29/hasimages - null null
2024-06-04 18:34:23.934 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.936 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.940 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.941 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.942 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.942 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.943 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.943 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.944 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:23.945 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.945 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.951 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:23.954 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:23.946 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:23.949 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:23.955 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:23.957 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:23.959 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:23.962 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 11.9282ms
2024-06-04 18:34:23.961 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:23.963 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 11.0121ms
2024-06-04 18:34:23.965 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:23.965 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.966 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 19.155ms
2024-06-04 18:34:23.967 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.968 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 10.0921ms
2024-06-04 18:34:23.969 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 41.3692ms
2024-06-04 18:34:23.969 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.970 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 43.6617ms
2024-06-04 18:34:23.971 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.974 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 46.5753ms
2024-06-04 18:34:23.977 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/29/hasimages - 200 null application/json; charset=utf-8 49.399ms
2024-06-04 18:34:23.981 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users/11 - null null
2024-06-04 18:34:23.981 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - null null
2024-06-04 18:34:23.980 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - null null
2024-06-04 18:34:23.981 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/25/hasimages - null null
2024-06-04 18:34:23.984 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.986 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.988 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.989 +03:00 [INF] CORS policy execution successful.
2024-06-04 18:34:23.990 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:23.990 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:23.991 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:23.991 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:23.992 +03:00 [INF] Route matched with {action = "GetUserById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.AppUser]] GetUserById(Int32) on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 18:34:23.993 +03:00 [INF] Route matched with {action = "GetCityById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.City]] GetCityById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:23.994 +03:00 [INF] Route matched with {action = "ReportHasImages", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Boolean]] ReportHasImages(Int32) on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 18:34:24.001 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__cityId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CityHallEmail], [c].[CountyId], [c].[Name], [c0].[Id], [c0].[Name], [c0].[WaterDeptEmail]
FROM [City] AS [c]
INNER JOIN [County] AS [c0] ON [c].[CountyId] = [c0].[Id]
WHERE [c].[Id] = @__cityId_0
2024-06-04 18:34:23.998 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[CityId], [u].[CountyId], [u].[Email], [u].[PasswordHash], [u].[PasswordSalt], [u].[PhoneNumber], [u].[ProfilePicture], [u].[RegistrationDate], [u].[RoleId], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2024-06-04 18:34:24.004 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__reportId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ReportImage] AS [r]
        WHERE [r].[ReportId] = @__reportId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-06-04 18:34:23.993 +03:00 [INF] Route matched with {action = "GetCountyById", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[AquaDefender_Backend.Domain.County]] GetCountyById(Int32) on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:34:24.005 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.City'.
2024-06-04 18:34:24.006 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.AppUser'.
2024-06-04 18:34:24.007 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2024-06-04 18:34:24.011 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend) in 12.7203ms
2024-06-04 18:34:24.012 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__countyId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Name], [t].[WaterDeptEmail], [c0].[Id], [c0].[CityHallEmail], [c0].[CountyId], [c0].[Name]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name], [c].[WaterDeptEmail]
    FROM [County] AS [c]
    WHERE [c].[Id] = @__countyId_0
) AS [t]
LEFT JOIN [City] AS [c0] ON [t].[Id] = [c0].[CountyId]
ORDER BY [t].[Id]
2024-06-04 18:34:24.012 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend) in 16.7127ms
2024-06-04 18:34:24.013 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend) in 12.1622ms
2024-06-04 18:34:24.014 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCityById (AquaDefender-Backend)'
2024-06-04 18:34:24.017 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetUserById (AquaDefender-Backend)'
2024-06-04 18:34:24.017 +03:00 [INF] Executing OkObjectResult, writing value of type 'AquaDefender_Backend.Domain.County'.
2024-06-04 18:34:24.018 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.ReportHasImages (AquaDefender-Backend)'
2024-06-04 18:34:24.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users/11 - 200 null application/json; charset=utf-8 38.8072ms
2024-06-04 18:34:24.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/cities/id/2665 - 200 null application/json; charset=utf-8 37.9891ms
2024-06-04 18:34:24.021 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend) in 12.8327ms
2024-06-04 18:34:24.022 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/25/hasimages - 200 null application/json; charset=utf-8 40.914ms
2024-06-04 18:34:24.027 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetCountyById (AquaDefender-Backend)'
2024-06-04 18:34:24.030 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties/id/35 - 200 null application/json; charset=utf-8 50.3366ms
2024-06-04 18:36:00.423 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 18:36:00.627 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 18:36:00.844 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 18:36:00.847 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 18:36:00.851 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 18:36:00.853 +03:00 [INF] Hosting environment: Development
2024-06-04 18:36:00.853 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 18:36:01.837 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 18:36:02.060 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 228.4933ms
2024-06-04 18:36:02.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 18:36:02.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 18:36:02.101 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 16.1745ms
2024-06-04 18:36:02.128 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.1768ms
2024-06-04 18:36:02.188 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 18:36:02.364 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 176.2291ms
2024-06-04 18:36:07.480 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 18:36:07.570 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 18:36:07.590 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:36:10.684 +03:00 [INF] Executed DbCommand (119ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 18:36:10.756 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 18:36:10.770 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 3174.6302ms
2024-06-04 18:36:10.773 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 18:36:10.779 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 3299.3975ms
2024-06-04 18:36:17.065 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 18:36:17.073 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 18:36:17.075 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:36:17.095 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[WaterDeptEmail]
FROM [County] AS [c]
2024-06-04 18:36:17.098 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[AquaDefender_Backend.Domain.County, AquaDefender-Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-06-04 18:36:17.099 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 19.858ms
2024-06-04 18:36:17.100 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 18:36:17.101 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 200 null application/json; charset=utf-8 36.6947ms
2024-06-04 18:37:19.820 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 18:37:19.988 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 18:37:20.214 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 18:37:20.216 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 18:37:20.219 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 18:37:20.220 +03:00 [INF] Hosting environment: Development
2024-06-04 18:37:20.220 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 18:37:20.905 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 18:37:21.124 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 224.276ms
2024-06-04 18:37:21.131 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 18:37:21.140 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 9.1485ms
2024-06-04 18:37:21.145 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 18:37:21.188 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.8747ms
2024-06-04 18:37:21.268 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 18:37:21.412 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 144.0713ms
2024-06-04 18:37:31.671 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 18:37:31.748 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 18:37:31.774 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:37:47.831 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 18:37:47.856 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 18:37:48.106 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 18:37:48.176 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 18:37:48.244 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 18:37:48.263 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 18:37:48.269 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 16488.9657ms
2024-06-04 18:37:48.270 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 18:37:48.279 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 16608.1385ms
2024-06-04 18:57:40.303 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 18:57:40.315 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 18:57:40.316 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 18:57:55.067 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 18:57:55.071 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 18:57:55.106 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 18:57:55.167 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 18:57:55.228 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 18:57:55.236 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 18:57:55.237 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 14920.2843ms
2024-06-04 18:57:55.239 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 18:57:55.240 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 14937.971ms
2024-06-04 19:09:19.497 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 19:09:19.515 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 19:09:19.516 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 19:09:34.338 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 19:09:34.344 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 19:09:34.389 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 19:09:34.453 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 19:09:34.521 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 19:09:34.530 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 19:09:34.531 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 15011.3261ms
2024-06-04 19:09:34.533 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 19:09:34.536 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 15040.9096ms
2024-06-04 19:09:50.549 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 19:09:50.696 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 19:09:50.834 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 19:09:50.835 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 19:09:50.837 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 19:09:50.839 +03:00 [INF] Hosting environment: Development
2024-06-04 19:09:50.839 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 19:09:51.814 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 19:09:52.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 282.951ms
2024-06-04 19:09:52.106 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 19:09:52.113 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 19:09:52.118 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 11.3961ms
2024-06-04 19:09:52.163 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 49.5231ms
2024-06-04 19:09:52.261 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 19:09:52.463 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 202.3861ms
2024-06-04 19:09:57.171 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 19:09:57.383 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 19:09:57.404 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 19:09:58.456 +03:00 [ERR] An error occurred using the connection to database '' on server ''.
2024-06-04 19:09:58.475 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 19:09:58.561 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 19:09:58.648 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 19:09:58.701 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 19:09:58.710 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 19:09:58.714 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 1305.882ms
2024-06-04 19:09:58.715 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 19:09:58.723 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 1552.504ms
2024-06-04 19:10:02.609 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Locations/counties - null null
2024-06-04 19:10:02.615 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 19:10:02.617 +03:00 [INF] Route matched with {action = "GetAllCounties", controller = "Locations"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.County]]] GetAllCounties() on controller AquaDefender_Backend.Controllers.LocationsController (AquaDefender-Backend).
2024-06-04 19:10:02.635 +03:00 [ERR] An error occurred using the connection to database '' on server ''.
2024-06-04 19:10:02.638 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 19:10:02.660 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
2024-06-04 19:10:02.706 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
2024-06-04 19:10:02.750 +03:00 [ERR] An error occurred while getting all counties.
System.InvalidOperationException: The ConnectionString property has not been initialized.
   at Microsoft.Data.SqlClient.SqlConnection.PermissionDemand()
   at Microsoft.Data.SqlClient.SqlConnectionFactory.PermissionDemand(DbConnection outerConnection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.LocationRepository.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\LocationRepository.cs:line 67
   at AquaDefender_Backend.Service.LocationService.GetAllCountiesAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\LocationService.cs:line 87
   at AquaDefender_Backend.Controllers.LocationsController.GetAllCounties() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\LocationController.cs:line 54
2024-06-04 19:10:02.756 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 19:10:02.757 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend) in 138.2089ms
2024-06-04 19:10:02.759 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.LocationsController.GetAllCounties (AquaDefender-Backend)'
2024-06-04 19:10:02.760 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Locations/counties - 500 null text/plain; charset=utf-8 150.9651ms
2024-06-04 19:12:06.167 +03:00 [INF] User profile is available. Using 'C:\Users\claud\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-06-04 19:12:06.275 +03:00 [WRN] The WebRootPath was not found: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\imagesRoot. Static files may be unavailable.
2024-06-04 19:12:06.388 +03:00 [INF] Now listening on: https://localhost:2112
2024-06-04 19:12:06.390 +03:00 [INF] Now listening on: http://localhost:2002
2024-06-04 19:12:06.393 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-06-04 19:12:06.395 +03:00 [INF] Hosting environment: Development
2024-06-04 19:12:06.396 +03:00 [INF] Content root path: C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend
2024-06-04 19:12:06.814 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/index.html - null null
2024-06-04 19:12:07.058 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/index.html - 200 null text/html;charset=utf-8 246.4955ms
2024-06-04 19:12:07.068 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - null null
2024-06-04 19:12:07.081 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_framework/aspnetcore-browser-refresh.js - 200 13776 application/javascript; charset=utf-8 12.2611ms
2024-06-04 19:12:07.090 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/_vs/browserLink - null null
2024-06-04 19:12:07.135 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/_vs/browserLink - 200 null text/javascript; charset=UTF-8 44.9864ms
2024-06-04 19:12:07.273 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - null null
2024-06-04 19:12:07.421 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 149.6253ms
2024-06-04 19:12:14.698 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Users - null null
2024-06-04 19:12:14.769 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.UsersController.GetAllUsers (AquaDefender-Backend)'
2024-06-04 19:12:14.783 +03:00 [INF] Route matched with {action = "GetAllUsers", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[AquaDefender_Backend.Domain.AppUser]]] GetAllUsers() on controller AquaDefender_Backend.Controllers.UsersController (AquaDefender-Backend).
2024-06-04 19:12:30.535 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 19:12:30.558 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 19:12:30.620 +03:00 [ERR] An error occurred while getting all users.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.UserRepository.GetAllUsersAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\UserRepository.cs:line 40
2024-06-04 19:12:30.688 +03:00 [ERR] An error occurred while getting all users.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.UserRepository.GetAllUsersAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\UserRepository.cs:line 40
   at AquaDefender_Backend.Service.UserService.GetAllUsersAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\UserService.cs:line 50
2024-06-04 19:12:30.753 +03:00 [ERR] An error occurred while getting all users.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.UserRepository.GetAllUsersAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\UserRepository.cs:line 40
   at AquaDefender_Backend.Service.UserService.GetAllUsersAsync() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\UserService.cs:line 50
   at AquaDefender_Backend.Controllers.UsersController.GetAllUsers() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\UsersController.cs:line 41
2024-06-04 19:12:30.767 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 19:12:30.772 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.UsersController.GetAllUsers (AquaDefender-Backend) in 15983.3719ms
2024-06-04 19:12:30.774 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.UsersController.GetAllUsers (AquaDefender-Backend)'
2024-06-04 19:12:30.781 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Users - 500 null text/plain; charset=utf-8 16082.8938ms
2024-06-04 19:42:45.711 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-in-progress - null null
2024-06-04 19:42:45.711 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-new - null null
2024-06-04 19:42:45.711 +03:00 [INF] Request starting HTTP/2 GET https://localhost:2112/Report/random-completed - null null
2024-06-04 19:42:45.729 +03:00 [INF] CORS policy execution successful.
2024-06-04 19:42:45.729 +03:00 [INF] CORS policy execution successful.
2024-06-04 19:42:45.729 +03:00 [INF] CORS policy execution successful.
2024-06-04 19:42:45.732 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 19:42:45.732 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 19:42:45.732 +03:00 [INF] Executing endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 19:42:45.738 +03:00 [INF] Route matched with {action = "GetRandomCompletedReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomCompletedReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 19:42:45.738 +03:00 [INF] Route matched with {action = "GetRandomInProgressReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomInProgressReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 19:42:45.738 +03:00 [INF] Route matched with {action = "GetRandomNewReports", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetRandomNewReports() on controller AquaDefender_Backend.Controllers.ReportController (AquaDefender-Backend).
2024-06-04 19:43:00.592 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 19:43:00.598 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 19:43:00.656 +03:00 [ERR] An error occurred while getting random reports by status New.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
2024-06-04 19:43:00.719 +03:00 [ERR] An error occurred while getting random new reports.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
   at AquaDefender_Backend.Service.ReportService.GetRandomNewReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\ReportService.cs:line 158
2024-06-04 19:43:00.792 +03:00 [ERR] An error occurred while getting random new reports.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
   at AquaDefender_Backend.Service.ReportService.GetRandomNewReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\ReportService.cs:line 158
   at AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\ReportController.cs:line 378
2024-06-04 19:43:00.804 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 19:43:00.807 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend) in 15063.9273ms
2024-06-04 19:43:00.808 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomNewReports (AquaDefender-Backend)'
2024-06-04 19:43:00.809 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-new - 500 null text/plain; charset=utf-8 15098.9138ms
2024-06-04 19:43:15.285 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 19:43:15.293 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 19:43:15.329 +03:00 [ERR] An error occurred while getting random reports by status InProgress.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
2024-06-04 19:43:15.388 +03:00 [ERR] An error occurred while getting random in-progress reports.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
   at AquaDefender_Backend.Service.ReportService.GetRandomInProgressReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\ReportService.cs:line 171
2024-06-04 19:43:15.455 +03:00 [ERR] An error occurred while getting random in-progress reports.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
   at AquaDefender_Backend.Service.ReportService.GetRandomInProgressReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\ReportService.cs:line 171
   at AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\ReportController.cs:line 398
2024-06-04 19:43:15.467 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 19:43:15.468 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend) in 29725.5963ms
2024-06-04 19:43:15.468 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomInProgressReports (AquaDefender-Backend)'
2024-06-04 19:43:15.470 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-in-progress - 500 null text/plain; charset=utf-8 29760.2899ms
2024-06-04 19:43:29.927 +03:00 [ERR] An error occurred using the connection to database 'AquaDefenderDatabase' on server 'tcp:claudiuprojectserver.database.windows.net,1433'.
2024-06-04 19:43:29.946 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'AquaDefender_Backend.Data.AquaDefenderDataContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2024-06-04 19:43:29.980 +03:00 [ERR] An error occurred while getting random reports by status Resolved.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
2024-06-04 19:43:30.034 +03:00 [ERR] An error occurred while getting random completed reports.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
   at AquaDefender_Backend.Service.ReportService.GetRandomCompletedReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\ReportService.cs:line 184
2024-06-04 19:43:30.094 +03:00 [ERR] An error occurred while getting random completed reports.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - No such host is known.)
 ---> System.ComponentModel.Win32Exception (11001): No such host is known.
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:11001,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at AquaDefender_Backend.Repository.ReportRepository.GetRandomReportsByStatus(ReportStatus status, Int32 count) in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Repository\ReportRepository.cs:line 178
   at AquaDefender_Backend.Service.ReportService.GetRandomCompletedReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Service\ReportService.cs:line 184
   at AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports() in C:\claudiu\Facultate\Licenta\AquaDefender\AquaDefender-Backend\Controllers\ReportController.cs:line 418
2024-06-04 19:43:30.103 +03:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-06-04 19:43:30.104 +03:00 [INF] Executed action AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend) in 44363.7537ms
2024-06-04 19:43:30.105 +03:00 [INF] Executed endpoint 'AquaDefender_Backend.Controllers.ReportController.GetRandomCompletedReports (AquaDefender-Backend)'
2024-06-04 19:43:30.106 +03:00 [INF] Request finished HTTP/2 GET https://localhost:2112/Report/random-completed - 500 null text/plain; charset=utf-8 44395.0028ms
